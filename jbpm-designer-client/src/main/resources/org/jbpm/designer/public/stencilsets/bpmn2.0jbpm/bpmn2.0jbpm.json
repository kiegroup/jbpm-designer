{
	"title":"jBPM BPMN2 (Full)",
	"namespace":"http://b3mn.org/stencilset/bpmn2.0#",
	"description":"This is the jBPM BPMN 2.0 stencil set specification.",
	"description_ja":"これはjBPM BPMN 2.0ステンシルセット仕様です。",
 	"propertyPackages": [
 		{
 			"name":"baseAttributes",
 			"properties": [
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"value":"",
					"description":"The descriptive name of the BPMN element.",
					"description_ja":"BPMN要素のわかりやすい名前。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines" : true,
					"refToView":"text_name"	
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"description_ja":"この属性は、説明やドキュメントなど、BPMN要素の注釈に使用されます。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"popular" : true
				},
				{
					"id":"isselectable",
					"type":"Choice",
					"title":"Selectable",
					"value":"true",
					"default": "true",
					"description":"This attribute is used to set selectable properties for every node and edges.",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"popular" : true,
					"items":[
						{
							"id":"c1",
							"title":"true",
							"value":"true"
						},
						{
							"id":"c2",
							"title":"false",
							"value":"false"
						}
					]
				}
 			]
 		},
 		{
            "name":"baseAttributesNoName",
            "properties": [
                {
                    "id":"documentation",
                    "type":"Text",
                    "title":"Documentation",
                    "value":"",
                    "description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
                    "description_ja":"この属性は、説明やドキュメントなど、BPMN要素の注釈に使用されます。",
                    "readonly":false,
                    "optional":true,
                    "length":"",
                    "wrapLines":true,
                    "popular" : true
                },
                {
                    "id":"isselectable",
                    "type":"Choice",
                    "title":"Selectable",
                    "value":"true",
                    "default": "true",
                    "description":"This attribute is used to set selectable properties for every node and edges.",
                    "readonly":false,
                    "optional":true,
                    "hidden":true,
                    "popular" : true,
                    "items":[
                        {
                            "id":"c1",
                            "title":"true",
                            "value":"true"
                        },
                        {
                            "id":"c2",
                            "title":"false",
                            "value":"false"
                        }
                    ]
                }
            ]
        },
		{
			"name" : "bgColor",
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			]
		},
		/**{
			"name" : "condition",
			"properties" : [
				{
					"id":"condition",
					"type":"String",
					"title":"Condition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular":true
				}
			]
		},**/
		{
			"name":"boundaryevent",
			"properties":[
				{
					"id":"boundarycancelactivity",
					"type":"Choice",
					"title":"CancelActivity",
					"value":"false",
					"description":"Denotes whether the activity should be cancelled or not, i.e., whether the boundary catch event acts as an error or an escalation. If the activity is not cancelled, multiple instances of that handler can run concurrently.",
					"description_ja":"アクティビティをキャンセルするかどうか、つまり、Boundaryキャッチイベントがエラーになるかエスカレーションになるかを示します。 アクティビティがキャンセルされない場合、そのハンドラの複数のインスタンスを同時に実行できます。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]                                               
				}
			]
		},
 		{
 			"name":"catchEventAttributes",
 			"properties":[
 				/**{
					"id":"eventdefinitionref",
					"type":"String",
					"title":"EventDefinitionRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"description_ja":"EventDefinitionRefs（EventDefinition）は、キャッチイベントとして想定される再利用可能なトリガーのタイプを定義する属性です。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},**/
				/**{
					"id":"eventdefinition",
					"type":"String",
					"title":"EventDefinition",
					"value":"",
					"description":"EventDefinition is an attribute that defines the type of contained triggers expected for a catch Event.",
					"description_ja":"EventDefinitionは、キャッチイベントとして想定される、中に含まれるトリガーのタイプを定義する属性です。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},**/
				{
					"id":"dataoutputassociations",
					"type":"Dataassignment",
					"title":"DataOutputAssociations",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"description_ja":"キャッチイベントのデータ関連。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataoutput",
					"type":"Dataoutputsingle",
					"title":"DataOutput",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"description_ja":"キャッチイベントのデータ関連。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
                    "id":"min",
                    "type":"Float",
                    "title":"Processing time (min)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"uniform|random",
                    "min" : "0"
                },
                {
                    "id":"max",
                    "type":"Float",
                    "title":"Processing time (max)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"uniform|random",
                    "min" : "0"
                },
                {
                    "id":"standarddeviation",
                    "type":"Float",
                    "title":"Standard Deviation",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"normal"
                },
                {
                    "id":"mean",
                    "type":"Float",
                    "title":"Processing time (mean)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"normal|poisson",
                    "min" : "0"
                },
                {
                    "id":"distributiontype",
                    "type":"Choice",
                    "title":"Distribution Type",
                    "value":"random",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "items": [
                        {
                            "id": "c1",
                            "title":"normal",
                            "value":"normal"
                        },
                        {
                            "id": "c2",
                            "title": "uniform",
                            "value": "uniform"
                        },
                        {
                            "id": "c3",
                            "title": "random",
                            "value": "random"
                        },
                        {
                            "id": "c4",
                            "title": "poisson",
                            "value": "poisson"
                        }
                    ]
                },
                {
                    "id":"timeunit",
                    "type":"Choice",
                    "title":"Time Unit",
                    "value":"",
                    "description":"Time unit options (seconds, minutes, hours)",
                    "description_ja":"Time unit options (seconds, minutes, hours)",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "items": [
                        {
                            "id": "c1",
                            "title":"milliseconds",
                            "value":"ms"
                        },
                        {
                            "id": "c2",
                            "title": "seconds",
                            "value": "s"
                        },
                        {
                            "id": "c3",
                            "title": "minutes",
                            "value": "min"
                        },
                        {
                            "id": "c4",
                            "title": "hours",
                            "value": "hour"
                        },
                        {
                            "id": "c5",
                            "title": "days",
                            "value": "day"
                        },
                        {
                            "id": "c6",
                            "title": "years",
                            "value": "year"
                        }
                    ]
                }
				/**,
				{
					"id":"outputset",
					"type":"Text",
					"title":"OutputSet",
					"value":"",
					"description":"The OutputSet for the catch Event.",
					"description_ja":"キャッチイベントのOutputSet。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}**/
 			]
 		},
 		{
 			"name":"throwEventAttributes",
 			"properties":[
 				/**{
					"id":"eventdefinitionref",
					"type":"String",
					"title":"EventDefinitionRef",
					"value":"",
					"description":"EventDefinitionRefs (EventDefinition) is an attribute that defines the type of reusable triggers expected for a catch Event.",
					"description_ja":"EventDefinitionRefs（EventDefinition）は、キャッチイベントとして想定される再利用可能なトリガーのタイプを定義する属性です。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},**/
				{
					"id":"eventdefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"description_ja":"EventDefinitions（EventDefinition） は、キャッチイベントとして想定される、中に含まれるトリガーのタイプを定義する属性です。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"datainputassociations",
					"type":"Dataassignment",
					"title":"DataInputAssociations",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"description_ja":"スローイベントのデータ関連。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"datainput",
					"type":"Datainputsingle",
					"title":"Data Input",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"description_ja":"スローイベントのデータ関連。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				/**,
				{
					"id":"inputset",
					"type":"String",
					"title":"InputSet",
					"value":"",
					"description":"The InputSet for the throw Event.",
					"description_ja":"スローイベントのInputSet。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}**/
				{
                    "id":"min",
                    "type":"Float",
                    "title":"Processing time (min)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"uniform|random",
                    "min" : "0"
                },
                {
                    "id":"max",
                    "type":"Float",
                    "title":"Processing time (max)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"uniform|random",
                    "min" : "0"
                },
                {
                    "id":"standarddeviation",
                    "type":"Float",
                    "title":"Standard Deviation",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"normal"
                },
                {
                    "id":"mean",
                    "type":"Float",
                    "title":"Processing time (mean)",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "fordistribution":"normal|poisson",
                    "min" : "0"
                },
                {
                    "id":"distributiontype",
                    "type":"Choice",
                    "title":"Distribution Type",
                    "value":"random",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "items": [
                        {
                            "id": "c1",
                            "title":"normal",
                            "value":"normal"
                        },
                        {
                            "id": "c2",
                            "title": "uniform",
                            "value": "uniform"
                        },
                        {
                            "id": "c3",
                            "title": "random",
                            "value": "random"
                        },
                        {
                            "id": "c4",
                            "title": "poisson",
                            "value": "poisson"
                        }
                    ]
                },
                {
                    "id":"timeunit",
                    "type":"Choice",
                    "title":"Time Unit",
                    "value":"",
                    "description":"Time unit options (seconds, minutes, hours)",
                    "description_ja":"Time unit options (seconds, minutes, hours)",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "items": [
                        {
                            "id": "c1",
                            "title":"milliseconds",
                            "value":"ms"
                        },
                        {
                            "id": "c2",
                            "title": "seconds",
                            "value": "s"
                        },
                        {
                            "id": "c3",
                            "title": "minutes",
                            "value": "min"
                        },
                        {
                            "id": "c4",
                            "title": "hours",
                            "value": "hour"
                        },
                        {
                            "id": "c5",
                            "title": "days",
                            "value": "day"
                        },
                        {
                            "id": "c6",
                            "title": "years",
                            "value": "year"
                        }
                    ]
                }
 			]
 		},
 		{
 			"name" : "compensationThrowing",
 			"properties" : [
 				{
 					"id":"waitforcompletion",
					"type":"Boolean",
					"title":"Wait for completion",
					"value":true,
					"popular":true,
					"description":"Determine whether a throw compensation is performed synchronously or asynchronously.",
					"description_ja":"スローCompensationが同期して実行されるか、非同期に実行されるかを決定します。",
					"readonly":false,
					"optional":true
 				}
 			]
 		},
 		{
 			"name" : "compensation",
 			"properties" : [
 				{
 					"id":"activityref",
					"type":"String",
					"title":"Activity reference",
					"value":"",
					"popular":true,
					"description":"The activity related to the compensation event",
					"description_ja":"Compensationイベントに関連するアクティビティ",
					"readonly":false,
					"optional":true
 				}
 			]
 		},
 		{
 			"name":"interrupting",
 			"properties":[
 				{
					"id":"isinterrupting",
					"type":"Boolean",
					"title":"Is Interrupting",
					"value":true,
					"description":"This attribute denotes whether the Sub-Process encompassing the Event Sub-Process should be cancelled or not.",
					"description_ja":"この属性は、イベントサブプロセスを包含するサブプロセスをキャンセルするかどうかを示します。",
					"inverseBoolean":false,
					"readonly":false,
					"optional":true,
					"refToView": [
						"frame",
						"frame2"
					]
				}
 			]
 		},
		{
			"name" : "diagram",
			"properties" : [
				{
					"id":"executable",
					"type":"Boolean",
					"title":"Executable",
					"value":true,
					"description":"Executable",
					"description_ja":"実行可能",
					"readonly":false,
					"optional":true
				},
				{
					"id":"package",
					"type":"String",
					"title":"Package",
					"value":"/defaultPackage/defaultPackage",
					"description":"Package",
					"description_ja":"パッケージ",
					"readonly":false,
					"optional":true
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Variable Definitions",
					"description_ja":"変数定義",
					"readonly":false,
					"optional":true
				},
				{
					"id":"adhocprocess",
					"type":"Choice",
					"title":"AdHoc",
					"value":"false",
					"description":"Defines an AdHoc process",
					"description_ja":"アドホックプロセスとして定義",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"false",
							"value":"false"
						},
						{
							"id": "c2",
							"title": "true",
							"value": "true"
						}
					]                                               
				},
				{
					"id":"imports",
					"type":"Import",
					"title":"Imports",
					"value":"",
					"description":"Comma-separated imports",
					"description_ja":"カンマ区切りインポート",
					"readonly":false,
					"optional":true
				},
				{
					"id":"globals",
					"type":"Global",
					"title":"Globals",
					"value":"",
					"description":"Comma-separated globals",
					"description_ja":"カンマ区切りグローバル",
					"readonly":false,
					"optional":true
				},
				{
					"id":"id",
					"type":"String",
					"title":"ID",
					"value":"[/defaultPackage, /defaultPackage].BPMN2-SampleProcess",
					"description":"ID",
					"description_ja":"ID",
					"readonly":false,
					"optional":true
				},
				{
					"id":"version",
					"type":"String",
					"title":"Version",
					"value":"",
					"description":"This defines the Version number of the Diagram.",
					"description_ja":"ダイアグラムのバージョン番号を定義します。",
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"timeunit",
					"type":"Choice",
					"title":"Base time unit",
					"value":"s",
					"description":"Time unit options (seconds, minutes, hours)",
					"description_ja":"Time unit options (seconds, minutes, hours)",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"items": [
						{
							"id": "c1",
							"title":"milliseconds",
							"value":"ms"
						},
						{
							"id": "c2",
							"title": "seconds",
							"value": "s"
						},
						{
							"id": "c3",
							"title": "minutes",
							"value": "min"
						},
						{
							"id": "c4",
							"title": "hours",
							"value": "hour"
						},
						{
							"id": "c5",
							"title": "days",
							"value": "day"
						},
						{
							"id": "c6",
							"title": "years",
							"value": "year"
						}
					]    
				},
				{
					"id":"currency",
					"type":"String",
					"title":"Base Currency",
					"value":"",
					"description":"Base currency (ISO 4217)",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"length":"50"
				},
				/**{
					"id":"author",
					"type":"String",
					"title":"Author",
					"value":"",
					"description":"This holds the name of the author of the Diagram.",
					"description_ja":"ダイアグラムの作成者を保持します。",
					"readonly":false,
					"optional":true,
					"length":"50"
				},**/
				/**{
					"id":"language",
					"type":"String",
					"title":"Language",
					"value":"English",
					"description":"This holds the name of the language in which text is written.",
					"description_ja":"テキストに使用された言語を保持します。",
					"readonly":false,
					"optional":true,
					"length":"50"
				},**/
				/**{	
					"id":"namespaces",
					"type":"Complex",
					"title":"Namespaces",
					"value":"",
					"description":"Additional namespaces and theire prefixes used in the diagram., ",
					"description_ja":"ダイアグラムで使用された追加の名前空間とそのプレフィックス。",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"prefix",
							"name":"Prefix",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"url",
							"name":"URL",
							"type":"String",
							"value":"",
							"width":200,
							"optional":false 
						}
					]
				},**/
				{
					"id":"targetnamespace",
					"type":"String",
					"title":"Target Namespace",
					"value":"http://www.omg.org/bpmn20",
					"description":"Defines the XML namespace of the elements inside the document.",
					"description_ja":"ドキュメント内の要素のXML名前空間を定義します。",
					"readonly":true,
					"optional":true,
					"length":"50"
				},
				/**{
					"id":"expressionlanguage",
					"type":"String",
					"title":"ExpressionLanguage",
					"value":"http://www.w3.org/1999/XPath",
					"description":"A Language may be provided so that the syntax of expressions used in the Diagram can be understood.",
					"description_ja":"ダイアグラムで使用される式の構文を理解できるように言語が提供されることがあります。",
					"readonly":false,
					"optional":true,
					"length":"50"
				},**/
				{
					"id":"typelanguage",
					"type":"String",
					"title":"TypeLanguage",
					"value":"http://www.w3.org/2001/XMLSchema",
					"description":"This attribute identifies the type system used by the elements of this Definition.",
					"description_ja":"この属性は、この定義の要素で使用されるタイプシステムを識別します。",
					"readonly":true,
					"optional":true,
					"length":"50"
				},
				/**{
					"id":"creationdate",
					"type":"Date",
					"title":"CreationDate",
					"value":"",
					"description":"This defines the date on which the Diagram was created.",
					"description_ja":"ダイアグラムが作成された日付を定義します。",
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				},**/
				/**{
					"id":"modificationdate",
					"type":"Date",
					"title":"ModificationDate",
					"value":"",
					"description":"This defines the date on which the Diagram was last modified.",
					"description_ja":"ダイアグラムが最後に変更された日付を定義します。",
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				}**/
			]
		},
		{
			"name": "flowElement",
			"properties" : [
				/**{
					"id":"categories",
					"type":"String",
					"title":"Categories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
			]
		},
		{
			"name" : "itemAwareElement",
			"properties" : [
				{
					"id" : "itemsubjectref",
					"type" : "String",
					"title" : "ItemSubjectRef",
					"description" : "Specification of the items that are stored or conveyed by the ItemAwareElement",
					"description_ja" : "ItemAwareElementによって格納または搬送されるアイテムの指定",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "datastate",
					"type" : "String",
					"title" : "DataState",
					"description" : "A reference to the DataState, which defines certain states for the data contained in the item.",
					"description_ja" : "アイテムに含まれるデータの特定の状態を定義するDataStateへの参照。",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				}
			]
		},
		/**{
			"name":"properties",
			"properties": [
				{
					"id":"properties",
					"type":"Complex",
					"title":"Properties",
					"value":"",
					"description":"Modeler-defined properties MAY be added to an Activity. These properties are local to the Activity. (e.g., Add Customer.Customer Name).",
					"description_ja":"モデラー定義のプロパティをアクティビティに追加することができます。これらのプロパティはアクティビティにローカルです（Customer.Customer Nameの追加など）。",
					"readonly": 	false,
					"optional": 	false,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"datastate",
							"name":"DataState",
							"type":"String",
							"value":"",
							"width":80,
							"optional":true
						},
						{
							"id":"itemkind",
							"name":"ItemKind",
							"type":"Choice",
							"value":"Information",
							"items" : [
					           {
					        	   "id":"information",
					        	   "title":"Information",
					        	   "value":"Information"
					           },
					           {
					        	   "id":"physical",
					        	   "title":"Physical",
					        	   "value":"Physical"
					           }
							           
							],
							"width":80,
							"optional":true
						},
						{
							"id":"structure",
							"name":"Structure",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"iscollection",
							"name":"isCollection",
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						}
					]
				}
			]
		},**/
		{
			"name" : "iospecification",
			"properties" : [
				{
					"id":"datainputset",
					"type":"Datainput",
					"title":"DataInputSet",
					"value":"",
					"description":"An InputSet is a collection of DataInput elements that together define a valid set of data inputs.",
					"description_ja":"InputSetは、データ入力の有効なセットを合わせて定義するDataInputエレメントのコレクションです。",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service"
					/** "complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"optional",
							"name":"Optional",
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						},
						{
							"id":"whileexecuting",
							"name":"WhileExecuting",
							"type":"Boolean",
							"value":false,
							"width":80,
							"optional":true
						}
					] **/
				},            
				{
					"id":"dataoutputset",
					"type":"Dataoutput",
					"title":"DataOutputSet",
					"value":"",
					"description":"An OutputSet is a collection of DataOutputs elements that together may be produced as output from an Activity or Event.",
					"description_ja":"OutputSet は、アクティビティまたはイベントの出力としてまとめて生成されるDataOutputs要素のコレクションです。",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service"
					/** "complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"optional",
							"name":"Optional",
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						},
						{
							"id":"whileexecuting",
							"name":"WhileExecuting",
							"type":"Boolean",
							"value":false,
							"width":80,
							"optional":true
						}
					] **/
				}
			]
		},
		{
			"name" : "activity",
			"properties": [
				/**{
					"id":"startquantity",
					"type":"Integer",
					"title":"StartQuantity",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},**/
				/**{
					"id":"completionquantity",
					"type":"Integer",
					"title":"CompletionQuantity",
					"value":1,
					"description":"Defines the number of tokens that must be generated from the activity",
					"description_ja":"アクティビティから生成する必要のあるトークンの数を定義します。",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},**/
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
					"description_ja":"このアクティビティCompensationの目的を意図しているかどうかを識別するフラグ。",
					"readonly":false,
					"optional":true,
					"refToView":"compensation"
				},
				{
					"id":"assignments",
					"type":"Dataassignment",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service"					
					/** "complexItems": [
						{
							"id":"to",
							"name":"To",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									"value":"End",
									"refToView":""
								}
							]
						}
					] **/
				}/**,
				{
					"id":"callacitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
					"value":false,
					"description":"a Call Activity is a wrapper for a globally defined Sub-Process that is reused in the current process.",
                                        "description_ja":"コールアクティビティは、現在のプロセスで再利用されているグローバル定義サブプロセスのラッパーです。",
					"readonly":false,
					"optional":"true",
					"refToView":"callActivity"
				}**/
			]
		},
		// start custom activity properties
		{
			"name" : "customactivity",
			"properties": [
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
					"description_ja":"このアクティビティCompensationの目的を意図しているかどうかを識別するフラグ。",
					"readonly":true,
					"optional":true,
					"refToView":"compensation"
				}/**,
				{
					"id":"callacitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
					"value":false,
					"description":"a Call Activity is a wrapper for a globally defined Sub-Process that is reused in the current process.",
                                        "description_ja":"コールアクティビティは、現在のプロセスで再利用されているグローバル定義サブプロセスのラッパーです。",
					"readonly":true,
					"optional":"true",
					"refToView":"callActivity"
				}**/
			]
		},
		// end custom activity properties
		{
			"name":"operation",
			"properties": [
				{
					"id":"operationname",
					"type":"String",
					"title":"OperationName",
					"value":"",
					"description":"The descriptive name for the operation element.",
					"description_ja":"オペレーション要素のわかりやすい名前。",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmessagename",
					"type":"String",
					"title":"InMessageName",
					"value":"",
					"description":"The descriptive name for the InMessage element",
					"description_ja":"InMessage要素のわかりやすい名前。",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmsgitemkind",
					"type":"Choice",
					"title":"InMessageItemKind",
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"description_ja":"アイテムの性質を定義します。有効な値はPhysicalまたはInformationです。デフォルト値はInformationです。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"inmsgstructure",
					"type":"String",
					"title":"InMessageStructure",
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"description_ja":"アイテムの性質を定義します。有効な値はPhysicalまたはInformationです。デフォルト値はInformationです。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"inmsgimport",
					"type":"Complex",
					"title":"InMessageImport",
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
					"description_ja":"データ構造体の場所とそのフォーマットを識別します。importType属性が未指定のままの場合、定義に指定されたtypeLanguageを使用するものと見なされます。",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType",
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace",
				        }
					]
				},
				{
					"id":"inmsgiscollection",
					"type":"Boolean",
					"title":"InMessageIsCollection",
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
					"description_ja":"実際のデータタイプがコレクションであることを示すには、このフラグをTrueに設定します。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmessagename",
					"type":"String",
					"title":"OutMessageName",
					"value":"",
					"description":"The descriptive name for the OutMessage element",
					"description_ja":"OutMessage要素のわかりやすい名前。",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"outmsgitemkind",
					"type":"Choice",
					"title":"OutMessageItemKind",
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"description_ja":"アイテムの性質を定義します。有効な値はPhysicalまたはInformationです。デフォルト値はInformationです。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"outmsgstructure",
					"type":"String",
					"title":"OutMessageStructure",
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"description_ja":"アイテムの性質を定義します。有効な値はPhysicalまたはInformationです。デフォルト値はInformationです。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmsgimport",
					"type":"Complex",
					"title":"OutMessageImport",
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
					"description_ja":"データ構造体の場所とそのフォーマットを識別します。importType属性が未指定のままの場合、定義に指定されたtypeLanguageを使用するものと見なされます。",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType",
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace",
				        }
					]
				},
				{
					"id":"outmsgiscollection",
					"type":"Boolean",
					"title":"OutMessageIsCollection",
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
					"description_ja":"実際のデータタイプがコレクションであることを示すには、このフラグをTrueに設定します。",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"name" : "loopcharacteristics",
			"properties" : [
				{
					"id":"looptype",
					"type":"Choice",
					"title":"LoopType",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							"value":"Standard",
							"icon" : "activity/list/looptype.standard.png",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MI Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						},
						{
							"id":"c4",
							"title":"MI Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						}	
					]
				},
				{
					"id":"testbefore",
					"type":"Boolean",
					"title":"TestBefore",
					"value":false,
					"description":"Flag that controls whether the loop condition is evaluated at the beginning (testBefore = true) or at the end (testBefore = false)of the loop iteration.",
					"description_ja":"ループ条件をループの先頭（testBefore = true）で評価するか、末尾で評価するか（testBefore = false）を制御するフラグ。",
				},
				{
					"id":"loopcondition",
					"type":"String",
					"title":"LoopCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"loopmaximum",
					"type":"Integer",
					"title":"LoopMaximum",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"loopcardinality",
					"type":"String",
					"title":"LoopCardinality",
					"value":"",
					"description":"A numeric Expression that controls the number of Activity instances that will be created. This Expression MUST evaluate to an integer.",
					"description_ja":"作成するアクティビティインスタンスの数を制御する数式。この式は整数に評価される必要があります。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"loopdatainput",
					"type":"String",
					"title":"LoopDataInput",
					"value":"",
					"description":"A reference to a DataInput which is part of the Activity InputOutputSpecification. This DataInput is used to determine the number of Activity instances, one Activity instance per item in the collection of data stored in that DataInput element.",
					"description_ja":"アクティビティのInputOutputSpecificationの一部であるDataInputへの参照。このDataInputは、アクティビティの数を特定するために使用されます。データのコレクション内のアイテムあたり1アクティビティインスタンスがそのDataInput要素に格納されます。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"loopdataoutput",
					"type":"String",
					"title":"LoopDataInput",
					"value":"",
					"description":"A reference to a DataOutput which is part of the Activity InputOutputSpecification.",
					"description_ja":"アクティビティのInputOutputSpecificationの一部であるDataOutputへの参照。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"inputdataitem",
					"type":"String",
					"title":"InputDataItem",
					"value":"",
					"description":"A Property, representing for every Activity instance the single item of the collection stored in the loopDataInput.",
					"description_ja":"すべてのアクティビティインスタンスに対して、loopDataInputに格納されているコレクションの単一のアイテムを表すプロパティ。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outputdataitem",
					"type":"String",
					"title":"OutputDataItem",
					"value":"",
					"description":"A Property, representing for every Activity instance the single item of the collection stored in the loopDataOutput.",
					"description_ja":"すべてのアクティビティインスタンスに対して、loopDataOutputに格納されているコレクションの単一のアイテムを表すプロパティ。",
					"readonly":false,
					"optional":true
				},
				/**{
					"id":"behavior",
					"type":"Choice",
					"title":"Behavior",
					"description":"The attribute behavior acts as a shortcut for specifying when events shall be thrown from an Activity instance that is about to complete. It can assume values of none, one, all, and complex.",
					"description_ja":"属性は、完了直前のアクティビティインスタンスからイベントがいつスローされるかを指定するためのショートカットとして動作します。有効な値は、none、one、all、およびcomplexです。",
					"value":"all",
					"items": [
				        {
				        	"id":"cnone",
				        	"value":"None",
				        	"title":"None"
				        },
				        {
				        	"id":"cone",
				        	"value":"One",
				        	"title":"One"
				        },
				        {
				        	"id":"call",
				        	"value":"All",
				        	"title":"All"
				        },
				        {
				        	"id":"ccomplex",
				        	"value":"Complex",
				        	"title":"Complex"
				        }
					]
				},**/
				{
					"id":"complexbehaviordefinition",
					"type":"Complex",
					"title":"ComplexBehaviorDefinition:",
					"description":"Controls when and which Events are thrown in case behavior is set to complex.",
					"description_ja":"動作がcomplexに設定されているときに、どのイベントをいつスローするかを制御します。",
					"value":"",
					"optional":true,
					"readonly":false,
					"complexItems": [
				        {
				        	"id":"cexpression",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Condition",
				        },
				        {
				        	"id":"ceventdefinition",
				        	"type":"Choice",
				        	"value":"signal",
				        	"width":100,
				        	"name":"EventDefinition",
				        	"items":[
			        	        {
			        	        	"id":"cnone",
			        	        	"value":"None",
			        	        	"title":"None"
			        	        },
			        	        {
			        	        	"id":"cmessage",
			        	        	"value":"Message",
			        	        	"title":"Message"
			        	        },
			        	        {
			        	        	"id":"cescalation",
			        	        	"value":"Escalation",
			        	        	"title":"Escalation"
			        	        },
			        	        {
			        	        	"id":"cerror",
			        	        	"value":"Error",
			        	        	"title":"Error"
			        	        },
			        	        {
			        	        	"id":"ccancel",
			        	        	"value":"Cancel",
			        	        	"title":"Cancel"
			        	        },
			        	        {
			        	        	"id":"ccompensation",
			        	        	"value":"Compensation",
			        	        	"title":"Compensation"
			        	        },
			        	        {
			        	        	"id":"csignal",
			        	        	"value":"Signal",
			        	        	"title":"Signal"
			        	        },
			        	        {
			        	        	"id":"cterminate",
			        	        	"value":"Terminate",
			        	        	"title":"Terminate"
			        	        }
				        	]
				        }
					]
				},
				/**{
					"id":"completioncondition",
					"type":"String",
					"title":"CompletionCondition:",
					"description":"This attribute defines a Boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.",
					"description_ja":"この属性は、trueに評価されたときに残りのアクティビティインスタンスをキャンセルし、トークンを生成するブール式を定義します。",
					"value":""
				},**/
				{
		        	"id":"onebehavioreventref",
		        	"type":"Choice",
		        	"value":"signal",
		        	"title":"OneBehaviorEventRef",
		        	"description":"The EventDefinition which is thrown when behavior is set to one and the first internal Activity instance has completed.",
				"description_ja":"動作が 1 つに設定され、最初の内部アクティビティインスタンスが完了したときにスローされるEventDefinition。",
		        	"items":[
	        	        {
	        	        	"id":"cnone",
	        	        	"value":"None",
	        	        	"title":"None"
	        	        },
	        	        {
	        	        	"id":"cmessage",
	        	        	"value":"Message",
	        	        	"title":"Message"
	        	        },
	        	        {
	        	        	"id":"cescalation",
	        	        	"value":"Escalation",
	        	        	"title":"Escalation"
	        	        },
	        	        {
	        	        	"id":"cerror",
	        	        	"value":"Error",
	        	        	"title":"Error"
	        	        },
	        	        {
	        	        	"id":"ccancel",
	        	        	"value":"Cancel",
	        	        	"title":"Cancel"
	        	        },
	        	        {
	        	        	"id":"ccompensation",
	        	        	"value":"Compensation",
	        	        	"title":"Compensation"
	        	        },
	        	        {
	        	        	"id":"csignal",
	        	        	"value":"Signal",
	        	        	"title":"Signal"
	        	        },
	        	        {
	        	        	"id":"cterminate",
	        	        	"value":"Terminate",
	        	        	"title":"Terminate"
	        	        }
		        	]
		        },
		        {
		        	"id":"nonebehavioreventref",
		        	"type":"Choice",
		        	"value":"signal",
		        	"title":"NoneBehaviorEventRef",
		        	"items":[
	        	        {
	        	        	"id":"cnone",
	        	        	"value":"None",
	        	        	"title":"None"
	        	        },
	        	        {
	        	        	"id":"cmessage",
	        	        	"value":"Message",
	        	        	"title":"Message"
	        	        },
	        	        {
	        	        	"id":"cescalation",
	        	        	"value":"Escalation",
	        	        	"title":"Escalation"
	        	        },
	        	        {
	        	        	"id":"cerror",
	        	        	"value":"Error",
	        	        	"title":"Error"
	        	        },
	        	        {
	        	        	"id":"ccancel",
	        	        	"value":"Cancel",
	        	        	"title":"Cancel"
	        	        },
	        	        {
	        	        	"id":"ccompensation",
	        	        	"value":"Compensation",
	        	        	"title":"Compensation"
	        	        },
	        	        {
	        	        	"id":"csignal",
	        	        	"value":"Signal",
	        	        	"title":"Signal"
	        	        },
	        	        {
	        	        	"id":"cterminate",
	        	        	"value":"Terminate",
	        	        	"title":"Terminate"
	        	        }
		        	]
		        }
			]
		},
		// start custom loop characteristics
		{
			"name" : "customloopcharacteristics",
			"properties" : [
				{
					"id":"looptype",
					"type":"Choice",
					"title":"LoopType",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							"value":"Standard",
							"icon" : "activity/list/looptype.standard.png",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MI Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						},
						{
							"id":"c4",
							"title":"MI Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						}	
					]
				},
				{
					"id":"completioncondition",
					"type":"String",
					"title":"CompletionCondition:",
					"description":"This attribute defines a Boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.",
					"description_ja":"この属性は、trueに評価されたときに残りのアクティビティインスタンスをキャンセルし、トークンを生成するブール式を定義します。",
					"value":""
				}
			]
		},
		// end custom loop characteristics
		{
			"name" : "task",
			"properties" : [
				{
					"id":"tasktype",
					"type":"Choice",
					"title":"TaskType",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"directlyEditable":false,
					"items":[
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Send",
							"value":"Send",
							"icon" : "activity/list/type.send.png",
							"refToView":"sendTask"
						},
						{
							"id":"c3",
							"title":"Receive",
							"value":"Receive",
							"icon" : "activity/list/type.receive.png",
							"refToView":"receiveTask"
						},
						{
							"id":"c4",
							"title":"User",
							"value":"User",
							"icon" : "activity/list/type.user.png",
							"refToView":"userTask"
						},
						{
							"id":"c5",
							"title":"Manual",
							"value":"Manual",
							"icon" : "activity/list/type.manual.png",
							"refToView":"manualTask"	
						},
						{
							"id":"c6",
							"title":"Service",
							"value":"Service",
							"icon" : "activity/list/type.service.png",
							"refToView":"serviceTask"
						},
						{
							"id":"c7",
							"title":"Business Rule",
							"value":"Business Rule",
							"icon" : "activity/list/type.business.rule.png",
							"refToView":"businessRuleTask"
						},
						{
							"id":"c8",
							"title":"Script",
							"value":"Script",
							"icon" : "activity/list/type.script.png",
							"refToView":"scriptTask"
						}
					]
				},
				/**{
					"id":"implementation",
					"type":"Choice",
					"title":"Implementation",
					"value":"webService",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"HumanTaskWebService",
							"value":"humanTaskWebService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"BuisnessRuleWebService",
							"value":"BuisnessRuleWebService",
							"refToView":""
						},
						{
							"id":"c1",
							"title":"WebService",
							"value":"webService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Other",
							"value":"other",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Unspecified",
							"value":"unspecified",
							"refToView":""
						}
					]
				},**/
				/**{
					"id":"resources",
					"type":"Complex",
					"title":"Resources",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"resource_type",
							"name":"Type",
							"type":"Choice",
							"value":"",
							"width":100,
							"optional":false,
							"items": [
								{
									"id":"c1",
									"title":"Performer",
									"value":"Performer",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"HumanPerformer",
									"value":"HumanPerformer",
									"refToView":""
								},
								{
									"id":"c3",
									"title":"PotentialOwner",
									"value":"PotentialOwner",
									"refToView":""
								}
							]
						},
						{
							"id":"resource",
							"name":"Resource",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						},
						{
							"id":"resourceassignmentexpr",
							"name":"ResourceAssignmentExpression",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						},
						{
							"id":"language",
							"name":"Language",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"evaluatestotype",
							"name":"EvaluatesToType",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						}
					]
				},**/
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50",
					"fortasktypes":"None|Send|Receive"
				},
				/**{
					"id":"operationref",
					"type":"String",
					"title":"OperationRef",
					"value":"",
					"description":"ID-Reference to an operation definition.",
					"description_ja":"オペレーションの定義へのID参照。",
					"readonly":false,
					"optional":true
				},**/
				/**{
					"id":"instantiate",
					"type":"Boolean",
					"title":"Instantiate",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},**/
				{
					"id":"script",
					"type":"Expression",
					"title":"Script",
					"value":"",
					"description":"Script that can be run when the Task is performed. Related to the Script TaskType, if a script is not included, then the Task will act equivalent to a TaskType of None.",
					"description_ja":"タスクを実行するときに実行可能なスクリプト。スクリプトのTaskTypeに関連して、スクリプトが含まれない場合は、タスクはTaskTypeがNoneである場合と同じように動作します。",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Script"
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"ScriptLanguage",
					"value":"java",
					"description":"Defines the script language. The script language MUST be provided if a script is provided.",
					"description_ja":"スクリプト言語を定義します。スクリプトを使用する場合は、スクリプト言語を指定する必要があります。",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Script",
					"items": [
						{
							"id": "c1",
							"title":"java",
							"value":"java"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                               
				},
				/**{
					"id":"inmessagetype",
					"type":"String",
					"title":"In Message",
					"value":"",
					"description":"Type of input message",
					"description_ja":"入力メッセージのタイプ",
					"readonly":false,
					"optional":true
				},**/
				/**{
					"id":"outmessagetype",
					"type":"String",
					"title":"Out Message",
					"value":"",
					"description":"Type of output message",
					"description_ja":"出力メッセージのタイプ",
					"readonly":false,
					"optional":true
				},**/
				/**{
					"id":"servicename",
					"type":"String",
					"title":"servicename",
					"value":"",
					"description":"name of service",
					"description_ja":"サービスの名前",
					"readonly":false,
					"optional":true
				},**/
				/**{
					"id":"namespace",
					"type":"String",
					"title":"Namespace",
					"value":"",
					"description":"Defines the XML namespace of the elements inside the document.",
					"description_ja":"ドキュメント内の要素のXML名前空間を定義します。",
					"readonly":false,
					"optional":true,
					"length":"50"
				},**/
				/** {
					"id":"operation",
					"type":"String",
					"title":"operation",
					"value":"",
					"description":"operation",
					"description_ja":"オペレーション",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Service"
				}, **/
				/**{
					"id":"porttype",
					"type":"String",
					"title":"porttype",
					"value":"",
					"description":"porttype",
					"description_ja":"ポートタイプ",
					"readonly":false,
					"optional":true
				},**/
				/**{
					"id":"wsdlUrl",
					"type":"String",
					"title":"wsdlUrl",
					"value":"",
					"description":"wsdlUrl",
					"description_ja":"WSDLURL",
					"readonly":false,
					"optional":true
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#b1c2d6",
					"gradient":true,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}		
			]
		},
		// start custom task properties
		{
			"name" : "customtask",
			"properties" : [
				/**{
					"id":"implementation",
					"type":"Choice",
					"title":"Implementation",
					"value":"other",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"HumanTaskWebService",
							"value":"humanTaskWebService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"BuisnessRuleWebService",
							"value":"BuisnessRuleWebService",
							"refToView":""
						},
						{
							"id":"c1",
							"title":"WebService",
							"value":"webService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Other",
							"value":"other",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Unspecified",
							"value":"unspecified",
							"refToView":""
						}
					]
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#b1c2d6",
					"gradient":true,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}		
			]
		},		
		// end custom task properties
		{
			"name" : "subprocess",
			"properties" : [
				/**{
					"id": "subprocesstype",
					"type": "Choice",
					"title": "subProcessType",
					"value": "Embedded",
					"description": "SubProcessType is an attribute that defines whether the Sub-Process details are embedded within the higher level Process or refers to another, re-usable Process. The default is Embedded.",
					"description_ja": "SubProcessTypeは、サブプロセスの詳細を上位レベルのプロセスに埋め込むか、別の再利用可能なプロセスを参照するかを定義する属性です。デフォルトはEmbeddedです。",
					"optional": false,
					"refToView": "",
					"items": [
						{
							"id": "choice1",
							"title":"Embedded",
							"value":"Embedded"
						},
						{
							"id": "choice2",
							"title": "Independent",
							"value": "Independent"
						},
						{
							"id": "choice3",
							"title": "Reusable",
							"value": "Reusable"
						}
					]
				},**/
				/**{
					"id":"isatransaction",
					"type":"Boolean",
					"title":"is a Transaction",
					"value":false,
					"description":"A Transaction is a set of activities that logically belongs together; it might follow a specified transaction protocol.",
					"description_ja":"トランザクションは、論理的にまとめられているアクティビティのセットです。指定されたトランザクションプロトコルに従います。",
					"readonly":false,
					"optional":false,
					"refToView":"border"
				},**/
				/**{
					"id":"transaction",
					"type":"String",
					"title":"TransactionRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},**/
				/**{
					"id":"transactionmethod",
					"type":"Choice",
					"title":"TransactionMethod",
					"value":"compensate",
					"description":"The technique that will be used to undo a transaction that has been cancelled.",
					"description_ja":"キャンセルされたトランザクションを元に戻すために使用される技術。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Compensate",
							"value":"compensate"
						},
						{
							"id":"c2",
							"title":"Store",
							"value":"store"
						},
						{
							"id":"c3",
							"title":"Image",
							"value":"image"
						}
					]
				},**/
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc"
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":""
				},
				{
					"id":"adhoccancelremaininginstances",
					"type":"Boolean",
					"title":"AdhocCancelRemainingInstances",
					"value":true,
					"description":"This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.",
					"description_ja":"この属性は、順序が並列の場合のみ使用されます。completionConditionがtrueになったときに、実行中のインスタンスをキャンセルするかどうかを決定します。",
					"readonly":false,
					"optional":true
				}
				/**,
				{
					"id":"entry",
					"type":"DiagramLink",
					"title":"SubProcessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"u"
				}**/
				/**,
				{
					"id":"diagramref",
					"type":"String",
					"title":"DiagramRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"processref",
					"type":"String",
					"title":"ProcessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				} **/
				/**,**/
				/**{
					"id":"inputmaps",
					"type":"String",
					"title":"InputMaps",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},**/
				/**{
					"id":"outputmaps",
					"type":"String",
					"title":"OutputMaps",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				}**/
			]
		},
		{
			"name" : "adhocsubprocess",
			"properties" : [
				/** {
					"id": "subprocesstype",
					"type": "Choice",
					"title": "subProcessType",
					"value": "AdHoc",
					"description": "SubProcessType is an attribute that defines whether the Sub-Process details are embedded within the higher level Process or refers to another, re-usable Process. The default is Embedded.",
					"description_ja": "SubProcessTypeは、サブプロセスの詳細を上位レベルのプロセスに埋め込むか、別の再利用可能なプロセスを参照するかを定義する属性です。デフォルトはEmbeddedです。",
					"optional": false,
					"refToView": "",
					"items": [
						{
							"id": "choice1",
							"title":"Embedded",
							"value":"Embedded"
						},
						{
							"id": "choice2",
							"title": "Independent",
							"value": "Independent"
						},
						{
							"id": "choice3",
							"title": "Reusable",
							"value": "Reusable"
						}
					]
				},**/
				/**{
					"id":"isatransaction",
					"type":"Boolean",
					"title":"is a Transaction",
					"value":false,
					"description":"A Transaction is a set of activities that logically belongs together; it might follow a specified transaction protocol.",
					"description_ja":"トランザクションは、論理的にまとめられているアクティビティのセットです。指定されたトランザクションプロトコルに従います。",
					"readonly":false,
					"optional":false,
					"refToView":"border"
				},**/
				/**{
					"id":"transaction",
					"type":"String",
					"title":"TransactionRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},**/
				/**{
					"id":"transactionmethod",
					"type":"Choice",
					"title":"TransactionMethod",
					"value":"compensate",
					"description":"The technique that will be used to undo a transaction that has been cancelled.",
					"description_ja":"キャンセルされたトランザクションを元に戻すために使用される技術。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Compensate",
							"value":"compensate"
						},
						{
							"id":"c2",
							"title":"Store",
							"value":"store"
						},
						{
							"id":"c3",
							"title":"Image",
							"value":"image"
						}
					]
				},**/
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
					"value":true,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc"
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"none",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"misequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"miparallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":""
				},
				{
					"id":"adhoccancelremaininginstances",
					"type":"Boolean",
					"title":"AdhocCancelRemainingInstances",
					"value":true,
					"description":"This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.",
					"description_ja":"この属性は、順序が並列の場合のみ使用されます。completionConditionがtrueになったときに、実行中のインスタンスをキャンセルするかどうかを決定します。",
					"readonly":false,
					"optional":true
				},
				/**{
					"id":"entry",
					"type":"DiagramLink",
					"title":"SubProcessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"u"
				},**/
				/**{
					"id":"diagramref",
					"type":"String",
					"title":"DiagramRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},**/
				/**{
					"id":"processref",
					"type":"String",
					"title":"ProcessRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				}
				/**,**/
				/**{
					"id":"inputmaps",
					"type":"String",
					"title":"InputMaps",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},**/
				/**{
					"id":"outputmaps",
					"type":"String",
					"title":"OutputMaps",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				}**/
			]
		},
		{
			"name" : "gateway",
			"properties" : [
				/**{
					"id":"assignments",
					"type":"Dataassignment",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				}**/
				/**,
				{
					"id":"gates",
					"type":"String",
					"title":"Gates",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
				/**,
				{
					"id":"gates_outgoingsequenceflow",
					"type":"String",
					"title":"[Gates] OutgoingSequenceFlow",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_assignments",
					"type":"String",
					"title":"[Gates] Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
			]
		},
		{
			"name" : "artifact",
			"properties" : [
			]
		},
		{
			"name":"process",
			"properties":[
				{
					"id":"processtype",
					"type":"Choice",
					"title":"ProcessType",
					"value":"None",
					"description":"The processType attribute Provides additional information about the level of abstraction modeled by this Process.",
					"description_ja":"processType属性は、このプロセスによってモデル化される抽象化のレベルについての情報を提供します。",
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Executable",
							"value":"Executable"
						},
						{
							"id":"c3",
							"title":"Non-Executable",
							"value":"Non-Executable"
						},
						{
							"id":"c4",
							"title":"Public",
							"value":"Public"
						}
					]
				},
				{
					"id":"isclosed",
					"type":"Boolean",
					"title":"isClosed",
					"value":false,
					"description":"A Boolean value specifying whether interactions, such as sending and receiving Messages and Events, not modeled in the Process can occur when the Process is executed or performed. If the value is true, they MAY NOT occur. If the value is false, they MAY occur.",
					"description_ja":"メッセージやイベントの送受信などプロセス内でモデル化されていないやりとりの発生を、プロセスが実行されたときに許可するかどうかを指定するブール値。値がtrueの場合、これらは発生しません。値がfalseの場合、これらは発生します。",
					"readonly":false,
					"optional":false
				}
			]
		},
		{
			"name" : "pool",
			"properties" : [
				{
					"id" : "multiinstance",
					"type" : "Boolean",
					"title" : "is Multi Instance Participant",
					"value" : false,
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"refToView" : "multiInstance"
				},
				{
					"id":"boundaryvisible",
					"type":"Boolean",
					"title":"BoundaryVisible",
					"value":true,
					"description":"Defines if the rectangular boundary for the Pool is visible.",
					"description_ja":"プールの長方形のBoundaryが可視かどうかを定義します。",
					"readonly":false,
					"optional":false,
					"refToView": ["border", "c", "caption", "captionDisableAntialiasing"],
					"visible":false
				},
				{
					"id":"processname",
					"type":"String",
					"title":"ProcessName",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed"
						}
					]
				},
				{
					"id":"adhoc",
					"type":"Boolean",
					"title":"AdHoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
					"value":"Parallel",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"none",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"misequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"miparallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"suppressjoinfailure",
					"type":"Boolean",
					"title":"SuppressJoinFailure",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"enableinstancecompensation",
					"type":"Boolean",
					"title":"EnableBooleanCompensation",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"processcategories",
					"type":"String",
					"title":"ProcessCategories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"processdocumentation",
					"type":"String",
					"title":"Process Documentation",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "dataAssociation",
			"properties" : [
			    {
					"id":"assignments",
					"type":"Dataassignment",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"popular":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						}
						/**,**/
						/**{
							"id":"language",
							"name":"Language",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						}**/
					]
			    },
			    {
					"id":"transformation",
					"title":"Transformation",
					"type":"String",
					"value":"",
					"optional":true,
					"popular":true
				}
			]
		}
	],
	"stencils" : [
 		{
			"type":				"node",
			"id":				"BPMNDiagram",
			"title":			"BPMN-Diagram",
			"groups":			["Diagram"],
			"description":		"A BPMN 2.0 Diagram.",
			"description_ja":"BPMN 2.0ダイアグラム。",
			"view":				"diagram.svg",
			"icon":				"diagram.png",
			"mayBeRoot":		true,
			"hide":				true,
			"propertyPackages" : ["diagram"],
			"roles":			["canContainArtifacts"],
			"properties": [
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"value":"BPMN2-SampleProcess",
					"description":"The descriptive name of the BPMN element.",
					"description_ja":"BPMN要素のわかりやすい名前。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines" : true,
					"refToView":"text_name",
					"popular" : true	
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"description_ja":"この属性は、説明やドキュメントなど、BPMN要素の注釈に使用されます。",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"popular" : true
				}
			]
		},
		
		// Acitvities
		{
			"type" : 			"node",
			"id": 				"Task",
			"title" : 			"Task",
			"groups" : 			["Activities"],
			"description" : 	"A task is a unit of work - the job to be performed.",
			"description_ja" : "タスクとは作業（実行すべきジョブ）の単位です。",
			"view" : 			"activity/task.svg",
			"icon" : 			"activity/task.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				/** "loopcharacteristics", **/
				"properties",
				"iospecification"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"sequence_end",
				"from_task_event",
				"to_task_event",
				"FromEventbasedGateway",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"ActivitiesMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"ruleFlowGroup",
					"type":"String",
					"title":"Ruleflow Group",
					"value":"",
					"description":"ruleFlowGroup",
					"description_ja":"ruleFlowGroup",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Business Rule"
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"description_ja":"アクション開始時",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Script"
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"description_ja":"アクション終了時",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Script"
				},
				{
					"id":"taskname",
					"type":"String",
					"title":"Task Name",
					"value":"",
					"description":"Task Name",
					"description_ja":"タスク名",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"serviceoperation",
					"type":"String",
					"title":"Service Operation",
					"value":"",
					"description":"Service Operation",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Service"
				},
				{
					"id":"serviceinterface",
					"type":"String",
					"title":"Service Interface",
					"value":"",
					"description":"Service Interface",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Service"
				},
				{
                    "id":"serviceimplementation",
                    "type":"Choice",
                    "title":"Service Implementation",
                    "value":"Java",
                    "description":"Specifies the service implementation type",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Service",
                    "items": [
                        {
                            "id": "c1",
                            "title":"Java",
                            "value":"Java"
                        },
                        {
                            "id": "c2",
                            "title": "Webservice",
                            "value": "##WebService"
                        }
                    ]
                },
				{
					"id":"actors",
					"type":"String",
					"title":"Actors",
					"value":"",
					"description":"Comma-separated list of actors",
					"description_ja":"アクターのカンマ区切りのリスト",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"groupid",
					"type":"String",
					"title":"GroupID",
					"value":"",
					"description":"he group id that is responsible for executing the human task",
					"description_ja":"ヒューマンタスクを担当するグループID",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"comment",
					"type":"String",
					"title":"Comment",
					"value":"",
					"description":"Comment",
					"description_ja":"コメント",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"content",
					"type":"String",
					"title":"Content",
					"value":"",
					"description":"The data associated with this task",
					"description_ja":"このタスクに関連付けられているデータ",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
                    "id":"reassignment",
                    "type":"Reassignment",
                    "title":"Reassignment",
                    "value":"",
                    "description":"Task reassignments",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|User"
                },
                {
                    "id":"notifications",
                    "type":"Notifications",
                    "title":"Notifications",
                    "value":"",
                    "description":"Task notifications",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|User"
                },
	            {
    			    "id":"locale",
    				"type":"String",
    				"title":"Locale",
    				"value":"",
    				"description":"The task i18n locale",
    				"readonly":false,
    				"optional":true,
    				"fortasktypes":"None|User"
    			},
				{
					"id":"skippable",
					"type":"Choice",
					"title":"Skippable",
					"value":"",
					"description":"Specifies whether the human task can be skipped",
					"description_ja":"ヒューマンタスクをスキップできるかどうかを指定します",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User",
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]
				},
				{
					"id":"priority",
					"type":"String",
					"title":"Priority",
					"value":"",
					"description":"An integer indicating the priority of the human task",
					"description_ja":"ヒューマンタスクの優先度を示す整数",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"min",
					"type":"Float",
					"title":"Processing time (min)",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fordistribution":"uniform|random",
					"min" : "0"
				},
				{
					"id":"max",
					"type":"Float",
					"title":"Processing time (max)",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fordistribution":"uniform|random",
					"min" : "0"
				},
				{
					"id":"standarddeviation",
					"type":"Float",
					"title":"Standard Deviation",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fordistribution":"normal"
				},
				{
					"id":"mean",
					"type":"Float",
					"title":"Processing time (mean)",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fordistribution":"normal|poisson",
					"min" : "0"
				},
				{
					"id":"timeunit",
					"type":"Choice",
					"title":"Time Unit",
					"value":"",
					"description":"Time unit options (seconds, minutes, hours)",
					"description_ja":"Time unit options (seconds, minutes, hours)",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"items": [
						{
							"id": "c1",
							"title":"milliseconds",
							"value":"ms"
						},
						{
							"id": "c2",
							"title": "seconds",
							"value": "s"
						},
						{
							"id": "c3",
							"title": "minutes",
							"value": "min"
						},
						{
							"id": "c4",
							"title": "hours",
							"value": "hour"
						},
						{
							"id": "c5",
							"title": "days",
							"value": "day"
						},
						{
							"id": "c6",
							"title": "years",
							"value": "year"
						}
					]
				},
				{
					"id":"distributiontype",
					"type":"Choice",
					"title":"Distribution Type",
					"value":"random",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"items": [
						{
							"id": "c1",
							"title":"normal",
							"value":"normal"
						},
						{
							"id": "c2",
							"title": "uniform",
							"value": "uniform"
						},
						{
							"id": "c3",
							"title": "random",
							"value": "random"
						},
						{
							"id": "c4",
							"title": "poisson",
							"value": "poisson"
						}
					]
				},
				{
					"id":"quantity",
					"type":"Float",
					"title":"Staff availability",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fortasktypes":"None|User",
					"min": "0"
				},
				{
					"id":"workinghours",
					"type":"Float",
					"title":"Working Hours",
					"value":"8",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"fortasktypes":"None|User",
					"min": "0"
				},
				{
					"id":"unitcost",
					"type":"Float",
					"title":"Cost per time unit",
					"value":"0",
					"description":"",
					"description_ja":"",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"min" : "0"
				},
				{
					"id":"currency",
					"type":"String",
					"title":"Currency",
					"value":"",
					"description":"Base currency (ISO 4217)",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"min" : "0"
				}
			]
		},
		// start custom workitems

				{
					"type" : 			"node",
					"id": 				"Log",
					"title" : 			"Log",
					"groups" : 			["Service Tasks"],
					"description" : 	"",
					"description_ja" : "",
					"view" : 			"activity/workitems/Log.svg",
						"icon" : 			"data%3Aimage%2Fpng%3Bbase64%2CR0lGODlhEAAQAMQAAG%2BFr3CFr3yRuIOSsYaUroidwIuWrI%2BZqJGlx5WdpZugoKGknaeomK6slLKv%0AkL21idSyaNq9fN3o%2BODIj%2BPs%2Bevx%2BvP2%2B%2Ff4%2B%2Fn6%2FAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkA%0AABkALAAAAAAQABAAAAVlYCaOZEk%2BaIqa4oO9MPSwLvxGsvlcwYUglwluRnJYjkiko9SwBCy%2FguDZ%0AKDEq2GyWUVpUApXotLIoKSjodFpRSlACFDGAkigdJHg8Gn8oGSQBEnISBiUEeYh4BCUDjY6PAyyS%0AIyEAOw%3D%3D",
					"propertyPackages" :[
						"customtask",
						"customactivity"
					],
					"roles" : 			[
						"all",
						"sequence_start",
						"sequence_end",
						"from_task_event",
						"to_task_event",
						"FromEventbasedGateway",
						"messageflow_start",
						"messageflow_end",
						"fromtoall",
						"ActivitiesMorph"
					],
					"properties": [
						{
							"id":"bgcolor",
							"type":"Color",
							"title":"BackgroundColor",
							"value":"#fafad2", 
							"description":"",
							"readonly":false,
							"optional":false,
							"refToView": "fill_el",
							"fill":true,
							"stroke":false
						},
						{
							"id":"origbgcolor",
							"type":"Color",
							"title":"Original Background Color",
							"value":"#fafad2",
							"description":"",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"visible":false
						},
						{
							"id":"bordercolor",
							"type":"Color",
							"title":"BorderColor",
							"value":"#000000",
							"description":"",
							"readonly":false,
							"optional":false,
							"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
							"fill":false,
							"stroke":true
						},
						{
							"id":"origbordercolor",
							"type":"Color",
							"title":"Original Border Color",
							"value":"#000000",
							"description":"",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"visible":false
						},
						{
							"id":"fontcolor",
							"type":"Color",
							"title":"Font Color",
							"value":"#000000",
							"description":"Font color",
							"description_ja":"フォントの色",
							"readonly":false,
							"optional":false,
							"refToView": ["text_name"],
							"fill":true,
							"stroke":false
						},
						{
							"id":"fontsize",
							"type":"Choice",
							"title":"Font Size",
							"value":"",
							"description":"The Font Size",
							"description_ja":"フォントのサイズ",
							"readonly":false,
							"optional":false,
							"refToView":"text_name",
							"items":[
								{
									"id":"c1",
									"title":"8",
									"value":"8"
								},
								{
									"id":"c2",
									"title":"9",
									"value":"9"
								},
								{
									"id":"c3",
									"title":"10",
									"value":"10"
								},
								{
									"id":"c4",
									"title":"11",
									"value":"11"
								},
								{
									"id":"c5",
									"title":"12",
									"value":"12"
								},
								{
									"id":"c6",
									"title":"14",
									"value":"14"
								},
								{
									"id":"c7",
									"title":"18",
									"value":"18"
								},
								{
									"id":"c8",
									"title":"20",
									"value":"20"
								},
								{
									"id":"c9",
									"title":"24",
									"value":"24"
								},
								{
									"id":"c10",
									"title":"36",
									"value":"36"
								},
								{
									"id":"c11",
									"title":"48",
									"value":"48"
								},
								{
									"id":"c12",
									"title":"72",
									"value":"72"
								}
							]
						},
					 {
							"id":"tasktype",
							"type":"Choice",
							"title":"TaskType",
							"value":"Log",
							"description":"",
							"readonly":true,
							"optional":false,
							"refToView":"",
							"items":[
								{
									"id":"c1",
									"title":"None",
									"value":"None",
									"refToView":"none"
								},
								{
									"id":"c2",
									"title":"Send",
									"value":"Send",
									"icon" : "activity/list/type.send.png",
									"refToView":"sendTask"
								},
								{
									"id":"c3",
									"title":"Receive",
									"value":"Receive",
									"icon" : "activity/list/type.receive.png",
									"refToView":"receiveTask"
								},
								{
									"id":"c4",
									"title":"User",
									"value":"User",
									"icon" : "activity/list/type.user.png",
									"refToView":"userTask"
								},
								{
									"id":"c5",
									"title":"Manual",
									"value":"Manual",
									"icon" : "activity/list/type.manual.png",
									"refToView":"manualTask"	
								},
								{
									"id":"c6",
									"title":"Service",
									"value":"Service",
									"icon" : "activity/list/type.service.png",
									"refToView":"serviceTask"
								},
								{
									"id":"c7",
									"title":"Business Rule",
									"value":"Business Rule",
									"icon" : "activity/list/type.business.rule.png",
									"refToView":"businessRuleTask"
								},
								{
									"id":"c8",
									"title":"Script",
									"value":"Script",
									"icon" : "activity/list/type.script.png",
									"refToView":"scriptTask"
								}
							]
						},
						{
							"id":"isselectable",
							"type":"Choice",
							"title":"Selectable",
							"value":"true",
							"default": "true",
							"description":"This attribute is used to set selectable properties for every node and edges.",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"popular" : true,
							"items":[
								{
									"id":"c1",
									"title":"true",
									"value":"true"
								},
								{
									"id":"c2",
									"title":"false",
									"value":"false"
								}
							]
						},
						{
							"id":"name",
							"type":"String",
							"title":"Name",
							"value":"Log",
							"description":"The descriptive name of the BPMN element.",
							"description_ja":"BPMN要素のわかりやすい名前。",
							"readonly":false,
							"optional":true,
							"length":"",
							"wrapLines" : true,
							"refToView":"text_name"	
						},
						{
							"id":"documentation",
							"type":"Text",
							"title":"Documentation",
							"value":"", 
							"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
							"description_ja":"この属性は、説明やドキュメントなど、BPMN要素の注釈に使用されます。",
							"readonly":true,
							"optional":true,
							"length":"",
							"wrapLines":true,
							"popular" : true
						},
						{
							"id":"taskName",
							"type":"String",
							"title":"Task Name",
							"value":"Log",
							"description":"Task Name",
							"description_ja":"タスク名",
							"readonly":true,
							"optional":true
						},
						{
							"id":"datainputset",
							"type":"Datainput",
							"title":"DataInputSet",
							"value":"Message:String",
							"description":"An InputSet is a collection of DataInput elements that together define a valid set of data inputs.",
							"description_ja":"InputSetは、データ入力の有効なセットを合わせて定義するDataInputエレメントのコレクションです。",
							"readonly":false,
							"optional":true,
						},  
						{
							"id":"dataoutputset",
							"type":"Dataoutput",
							"title":"DataOutputSet",
							"value":"",
							"description":"An OutputSet is a collection of DataOutputs elements that together may be produced as output from an Activity or Event.",
							"description_ja":"OutputSet は、アクティビティまたはイベントの出力としてまとめて生成されるDataOutputs要素のコレクションです。",
							"readonly":false,
							"optional":true,
						},
						{
							"id":"assignments",
							"type":"Dataassignment",
							"title":"Assignments",
							"value":"Message",
							"description":"",
							"readonly":false,
							"optional":true,
						},
						{
							"id":"onEntryActions",
							"type":"Action",
							"title":"On Entry Actions",
							"value":"",
							"description":"on entry actions",
							"description_ja":"アクション開始時",
							"readonly":false,
							"optional":true
						},
						{
							"id":"onExitActions",
							"type":"Action",
							"title":"On Exit Actions",
							"value":"",
							"description":"on exit actions",
							"description_ja":"アクション終了時",
							"readonly":false,
							"optional":true
						},
						{
							"id":"script_language",
							"type":"Choice",
							"title":"ScriptLanguage",
							"value":"java",
							"description":"Defines the script language.",
							"description_ja":"スクリプト言語を定義します。",
							"readonly":false,
							"optional":true,
							"items": [
								{
									"id": "c1",
									"title":"java",
									"value":"java"
								},
								{
									"id": "c2",
									"title": "mvel",
									"value": "mvel"
								}
							]                                        
						},
						{
		                    "id":"min",
		                    "type":"Float",
		                    "title":"Processing time (min)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"uniform|random",
		                    "min" : "0"
		                },
		                {
		                    "id":"max",
		                    "type":"Float",
		                    "title":"Processing time (max)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"uniform|random",
		                    "min" : "0"
		                },
		                {
		                    "id":"standarddeviation",
		                    "type":"Float",
		                    "title":"Standard Deviation",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"normal"
		                },
		                {
		                    "id":"mean",
		                    "type":"Float",
		                    "title":"Processing time (mean)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"normal|poisson",
		                    "min" : "0"
		                },
		                {
		                    "id":"timeunit",
		                    "type":"Choice",
		                    "title":"Time Unit",
		                    "value":"",
		                    "description":"Time unit options (seconds, minutes, hours)",
		                    "description_ja":"Time unit options (seconds, minutes, hours)",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "items": [
		                        {
		                            "id": "c1",
		                            "title":"milliseconds",
		                            "value":"ms"
		                        },
		                        {
		                            "id": "c2",
		                            "title": "seconds",
		                            "value": "s"
		                        },
		                        {
		                            "id": "c3",
		                            "title": "minutes",
		                            "value": "min"
		                        },
		                        {
		                            "id": "c4",
		                            "title": "hours",
		                            "value": "hour"
		                        },
		                        {
		                            "id": "c5",
		                            "title": "days",
		                            "value": "day"
		                        },
		                        {
		                            "id": "c6",
		                            "title": "years",
		                            "value": "year"
		                        }
		                    ]
		                },
		                {
		                    "id":"distributiontype",
		                    "type":"Choice",
		                    "title":"Distribution Type",
		                    "value":"random",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "items": [
		                        {
		                            "id": "c1",
		                            "title":"normal",
		                            "value":"normal"
		                        },
		                        {
		                            "id": "c2",
		                            "title": "uniform",
		                            "value": "uniform"
		                        },
		                        {
		                            "id": "c3",
		                            "title": "random",
		                            "value": "random"
		                        },
		                        {
		                            "id": "c4",
		                            "title": "poisson",
		                            "value": "poisson"
		                        }
		                    ]
		                },
		                {
		                    "id":"unitcost",
		                    "type":"Float",
		                    "title":"Cost per time unit",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "min" : "0"
		                },
		                {
		                    "id":"currency",
		                    "type":"String",
		                    "title":"Currency",
		                    "value":"",
		                    "description":"Base currency (ISO 4217)",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "min" : "0"
		                }
					]
				},
				
				{
					"type" : 			"node",
					"id": 				"Email",
					"title" : 			"Email",
					"groups" : 			["Service Tasks"],
					"description" : 	"",
					"description_ja" : "",
					"view" : 			"activity/workitems/Email.svg",
						"icon" : 			"data%3Aimage%2Fpng%3Bbase64%2CR0lGODlhEAAQANUAAChilmd9qW2DrXeMtJiYkZuajqGeiqZrEKehh6m30qyjhK1yErCmgbOpfrZ8%0AFLmter2EFr%2Bwd8HG2ca0ceDq9%2BPs%2BOjv%2BOvx%2BfL1%2Bvb4%2B%2Fj5%2FPvll%2FvusPvyufz62%2F797wAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkAACAALAAAAAAQABAAAAaAQJBw%0ASCwaJ8ikclLUOJ9QJtEpqVolGekQAsl4v16tEPKBYKpnCSYC4ro%2FZYx8%2FoB47vi7GcDHPBwdgYKB%0AHA4DAgEXDQsbjY6NCxd8ABcMIAeYmI0HFp2eCkUHGwcVCQmlpwihpBUVFK2vBkWtprWmFbJEFK%2B7%0ArrsUBUUEw8TFBUEAOw%3D%3D",
					"propertyPackages" :[
						"customtask",
						"customactivity"
					],
					"roles" : 			[
						"all",
						"sequence_start",
						"sequence_end",
						"from_task_event",
						"to_task_event",
						"FromEventbasedGateway",
						"messageflow_start",
						"messageflow_end",
						"fromtoall",
						"ActivitiesMorph"
					],
					"properties": [
						{
							"id":"bgcolor",
							"type":"Color",
							"title":"BackgroundColor",
							"value":"#fafad2", 
							"description":"",
							"readonly":false,
							"optional":false,
							"refToView": "fill_el",
							"fill":true,
							"stroke":false
						},
						{
							"id":"origbgcolor",
							"type":"Color",
							"title":"Original Background Color",
							"value":"#fafad2",
							"description":"",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"visible":false
						},
						{
							"id":"bordercolor",
							"type":"Color",
							"title":"BorderColor",
							"value":"#000000",
							"description":"",
							"readonly":false,
							"optional":false,
							"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
							"fill":false,
							"stroke":true
						},
						{
							"id":"origbordercolor",
							"type":"Color",
							"title":"Original Border Color",
							"value":"#000000",
							"description":"",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"visible":false
						},
						{
							"id":"fontcolor",
							"type":"Color",
							"title":"Font Color",
							"value":"#000000",
							"description":"Font color",
							"description_ja":"フォントの色",
							"readonly":false,
							"optional":false,
							"refToView": ["text_name"],
							"fill":true,
							"stroke":false
						},
						{
							"id":"fontsize",
							"type":"Choice",
							"title":"Font Size",
							"value":"",
							"description":"The Font Size",
							"description_ja":"フォントのサイズ",
							"readonly":false,
							"optional":false,
							"refToView":"text_name",
							"items":[
								{
									"id":"c1",
									"title":"8",
									"value":"8"
								},
								{
									"id":"c2",
									"title":"9",
									"value":"9"
								},
								{
									"id":"c3",
									"title":"10",
									"value":"10"
								},
								{
									"id":"c4",
									"title":"11",
									"value":"11"
								},
								{
									"id":"c5",
									"title":"12",
									"value":"12"
								},
								{
									"id":"c6",
									"title":"14",
									"value":"14"
								},
								{
									"id":"c7",
									"title":"18",
									"value":"18"
								},
								{
									"id":"c8",
									"title":"20",
									"value":"20"
								},
								{
									"id":"c9",
									"title":"24",
									"value":"24"
								},
								{
									"id":"c10",
									"title":"36",
									"value":"36"
								},
								{
									"id":"c11",
									"title":"48",
									"value":"48"
								},
								{
									"id":"c12",
									"title":"72",
									"value":"72"
								}
							]
						},
					 {
							"id":"tasktype",
							"type":"Choice",
							"title":"TaskType",
							"value":"Email",
							"description":"",
							"readonly":true,
							"optional":false,
							"refToView":"",
							"items":[
								{
									"id":"c1",
									"title":"None",
									"value":"None",
									"refToView":"none"
								},
								{
									"id":"c2",
									"title":"Send",
									"value":"Send",
									"icon" : "activity/list/type.send.png",
									"refToView":"sendTask"
								},
								{
									"id":"c3",
									"title":"Receive",
									"value":"Receive",
									"icon" : "activity/list/type.receive.png",
									"refToView":"receiveTask"
								},
								{
									"id":"c4",
									"title":"User",
									"value":"User",
									"icon" : "activity/list/type.user.png",
									"refToView":"userTask"
								},
								{
									"id":"c5",
									"title":"Manual",
									"value":"Manual",
									"icon" : "activity/list/type.manual.png",
									"refToView":"manualTask"	
								},
								{
									"id":"c6",
									"title":"Service",
									"value":"Service",
									"icon" : "activity/list/type.service.png",
									"refToView":"serviceTask"
								},
								{
									"id":"c7",
									"title":"Business Rule",
									"value":"Business Rule",
									"icon" : "activity/list/type.business.rule.png",
									"refToView":"businessRuleTask"
								},
								{
									"id":"c8",
									"title":"Script",
									"value":"Script",
									"icon" : "activity/list/type.script.png",
									"refToView":"scriptTask"
								}
							]
						},
						{
							"id":"isselectable",
							"type":"Choice",
							"title":"Selectable",
							"value":"true",
							"default": "true",
							"description":"This attribute is used to set selectable properties for every node and edges.",
							"readonly":false,
							"optional":true,
							"hidden":true,
							"popular" : true,
							"items":[
								{
									"id":"c1",
									"title":"true",
									"value":"true"
								},
								{
									"id":"c2",
									"title":"false",
									"value":"false"
								}
							]
						},
						{
							"id":"name",
							"type":"String",
							"title":"Name",
							"value":"Email",
							"description":"The descriptive name of the BPMN element.",
							"description_ja":"BPMN要素のわかりやすい名前。",
							"readonly":false,
							"optional":true,
							"length":"",
							"wrapLines" : true,
							"refToView":"text_name"	
						},
						{
							"id":"documentation",
							"type":"Text",
							"title":"Documentation",
							"value":"", 
							"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
							"description_ja":"この属性は、説明やドキュメントなど、BPMN要素の注釈に使用されます。",
							"readonly":true,
							"optional":true,
							"length":"",
							"wrapLines":true,
							"popular" : true
						},
						{
							"id":"taskName",
							"type":"String",
							"title":"Task Name",
							"value":"Email",
							"description":"Task Name",
							"description_ja":"タスク名",
							"readonly":true,
							"optional":true
						},
						{
							"id":"datainputset",
							"type":"Datainput",
							"title":"DataInputSet",
							"value":"To:String,From:String,Subject:String,Body:String",
							"description":"An InputSet is a collection of DataInput elements that together define a valid set of data inputs.",
							"description_ja":"InputSetは、データ入力の有効なセットを合わせて定義するDataInputエレメントのコレクションです。",
							"readonly":false,
							"optional":true,
						},  
						{
							"id":"dataoutputset",
							"type":"Dataoutput",
							"title":"DataOutputSet",
							"value":"",
							"description":"An OutputSet is a collection of DataOutputs elements that together may be produced as output from an Activity or Event.",
							"description_ja":"OutputSet は、アクティビティまたはイベントの出力としてまとめて生成されるDataOutputs要素のコレクションです。",
							"readonly":false,
							"optional":true,
						},
						{
							"id":"assignments",
							"type":"Dataassignment",
							"title":"Assignments",
							"value":"To=,From=,Subject=,Body",
							"description":"",
							"readonly":false,
							"optional":true,
						},
						{
							"id":"onEntryActions",
							"type":"Action",
							"title":"On Entry Actions",
							"value":"",
							"description":"on entry actions",
							"description_ja":"アクション開始時",
							"readonly":false,
							"optional":true
						},
						{
							"id":"onExitActions",
							"type":"Action",
							"title":"On Exit Actions",
							"value":"",
							"description":"on exit actions",
							"description_ja":"アクション終了時",
							"readonly":false,
							"optional":true
						},
						{
							"id":"script_language",
							"type":"Choice",
							"title":"ScriptLanguage",
							"value":"java",
							"description":"Defines the script language.",
							"description_ja":"スクリプト言語を定義します。",
							"readonly":false,
							"optional":true,
							"items": [
								{
									"id": "c1",
									"title":"java",
									"value":"java"
								},
								{
									"id": "c2",
									"title": "mvel",
									"value": "mvel"
								}
							]                                        
						},
						{
		                    "id":"min",
		                    "type":"Float",
		                    "title":"Processing time (min)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"uniform|random",
		                    "min" : "0"
		                },
		                {
		                    "id":"max",
		                    "type":"Float",
		                    "title":"Processing time (max)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"uniform|random",
		                    "min" : "0"
		                },
		                {
		                    "id":"standarddeviation",
		                    "type":"Float",
		                    "title":"Standard Deviation",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"normal"
		                },
		                {
		                    "id":"mean",
		                    "type":"Float",
		                    "title":"Processing time (mean)",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "fordistribution":"normal|poisson",
		                    "min" : "0"
		                },
		                {
		                    "id":"timeunit",
		                    "type":"Choice",
		                    "title":"Time Unit",
		                    "value":"",
		                    "description":"Time unit options (seconds, minutes, hours)",
		                    "description_ja":"Time unit options (seconds, minutes, hours)",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "items": [
		                        {
		                            "id": "c1",
		                            "title":"milliseconds",
		                            "value":"ms"
		                        },
		                        {
		                            "id": "c2",
		                            "title": "seconds",
		                            "value": "s"
		                        },
		                        {
		                            "id": "c3",
		                            "title": "minutes",
		                            "value": "min"
		                        },
		                        {
		                            "id": "c4",
		                            "title": "hours",
		                            "value": "hour"
		                        },
		                        {
		                            "id": "c5",
		                            "title": "days",
		                            "value": "day"
		                        },
		                        {
		                            "id": "c6",
		                            "title": "years",
		                            "value": "year"
		                        }
		                    ]
		                },
		                {
		                    "id":"distributiontype",
		                    "type":"Choice",
		                    "title":"Distribution Type",
		                    "value":"random",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "items": [
		                        {
		                            "id": "c1",
		                            "title":"normal",
		                            "value":"normal"
		                        },
		                        {
		                            "id": "c2",
		                            "title": "uniform",
		                            "value": "uniform"
		                        },
		                        {
		                            "id": "c3",
		                            "title": "random",
		                            "value": "random"
		                        },
		                        {
		                            "id": "c4",
		                            "title": "poisson",
		                            "value": "poisson"
		                        }
		                    ]
		                },
		                {
		                    "id":"unitcost",
		                    "type":"Float",
		                    "title":"Cost per time unit",
		                    "value":"0",
		                    "description":"",
		                    "description_ja":"",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "min" : "0"
		                },
		                {
		                    "id":"currency",
		                    "type":"String",
		                    "title":"Currency",
		                    "value":"",
		                    "description":"Base currency (ISO 4217)",
		                    "readonly":false,
		                    "optional":true,
		                    "simulation" : true,
		                    "min" : "0"
		                }
					]
				},
				
		// end custom workitems
		// start patterns
		           {
		               "type" : 			"node",
		               "id": 				"wp-simplemerge",
		               "title" : 			"Simple Merge",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Simple Merge Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-implicittermination",
		               "title" : 			"Implicit Termination",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Implicit Termination Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-deferredchoice",
		               "title" : 			"Deferred Choice",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Deferred Choice Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-synchronization",
		               "title" : 			"Synchronization",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Synchronization Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-miwithoutsynchronization",
		               "title" : 			"MI Without Synchronization",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Multiple Instance Without Synchronization Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-synchronizingmerge",
		               "title" : 			"Synchronizing Merge",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Synchronizing Merge Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-exclusivechoice",
		               "title" : 			"Exclusive Choice",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Exclusive Choice Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-parallelsplit",
		               "title" : 			"Parallel Split",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Parallel Split Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-xorsplit",
		               "title" : 			"XOR Split",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "XOR Split Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-sequence",
		               "title" : 			"Sequence",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Sequence Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				           {
		               "type" : 			"node",
		               "id": 				"wp-arbitrarycycles",
		               "title" : 			"Arbitrary Cycles",
		               "groups" : 			["Workflow Patterns"],
		               "description" : 	    "Arbitrary Cycles Pattern",
		               "description_ja" : "",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },
				
		// end patterns
		{
			"type" : 			"node",
			"id" :				"ReusableSubprocess",
			"title" : 			"Reusable Subprocess",
			"groups" :			["Activities"],
			"description" :		"A reusable subprocess. It can be used to invoke another process.",
			"description_ja" :"再利用可能なサブプロセス。別のプロセスの起動に使用できます。",
			"view" :			"activity/subprocess.collapsed.svg",
			"icon" :			"activity/subprocess.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				/** "subprocess", **/
				/** "loopcharacteristics", **/
				"bgColor",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#fafad2", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"calledelement",
					"type":"CalledElement",
					"title":"Called Element",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"pimg",
					"length":""
				},	
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"description_ja":"アクション開始時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"description_ja":"アクション終了時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"independent",
					"type":"Choice",
					"title":"Independent",
					"value":"true",
					"description":"If set to true the child process is started as an independent process.",
					"description_ja":"trueに設定した場合、子プロセスは独立したプロセスとして開始されます。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]
				},
				{
 					"id":"waitforcompletion",
					"type":"Choice",
					"title":"Wait for completion",
					"value":"true",
					"description":"If true this sub-process node will only continue if the child process that was started has terminated its execution (completed or aborted)",
					"description_ja":"trueの場合、このサブプロセスノードは、開始した子プロセスが実行を終了した（完了または中止）場合のみ続行します",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]
 				},
 				{
					"id":"script_language",
					"type":"Choice",
					"title":"ScriptLanguage",
					"value":"java",
					"description":"Defines the script language.",
					"description_ja":"スクリプト言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"java",
							"value":"java"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                        
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"ActivitiesMorph"
			]
		}, 
		{
			"type" : 			"node",
			"id" :				"MultipleInstanceSubprocess",
			"title" : 			"Multiple instances",
			"groups" :			["Activities"],
			"description" :		"A multiple instances subprocess. Allows to execute the contained process segment multiple times.",
			"description_ja" :"複数のインスタンスを持つサブプロセス。含まれるプロセスセグメントを複数回実行できます。",
			"view" :			"activity/subprocess.multiple.svg",
			"icon" :			"activity/subprocess.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				/** "activity", **/
				/** "subprocess", **/
				/** "loopcharacteristics", **/
				"bgColor",
				"properties" /**,**/
				/** "iospecification" **/
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#fafad2", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
 				{
					"id":"collectionexpression",
					"type":"String",
					"title":"CollectionExpression",
					"value":"",
					"description":"Name of a variable that represents the collection of elements that should be iterated over.",
					"description_ja":"繰り返しを実行させる要素のコレクションを表す変数の名前。",
					"readonly":false,
					"optional":false
				},
				{
					"id":"variablename",
					"type":"String",
					"title":"Variable Name",
					"value":"",
					"description":"Name of the variable to contain the current element from the collection.",
					"description_ja":"コレクションの現在の要素を含む変数の名前。",
					"readonly":false,
					"optional":false
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"description_ja":"アクション開始時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"description_ja":"アクション終了時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"ScriptLanguage",
					"value":"java",
					"description":"Defines the script language.",
					"description_ja":"スクリプト言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"java",
							"value":"java"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                        
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Comma-separated variable definitions",
					"description_ja":"カンマ区切りの変数定義",
					"readonly":false,
					"optional":true
				}
			],
			"roles": [
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Subprocess",
			"title" :			"Embedded Subprocess",
			"groups" :			["Activities"],
			"description" :		"A subprocess is a decomposable activity. An expanded subprocess contains a valid BPMN diagram.",
			"description_ja" :"サブプロセスは分解不可のアクティビティです。拡張サブプロセスには、有効なBPMNダイアグラムが含まれています。",
			"view" :			"activity/subprocess.embedded.svg",
			"icon" :			"activity/expanded.subprocess.png",
 			"layout" : 			[
 									{"type" : "layout.bpmn2_0.subprocess"},
 									{"type" : "layout.container.dockers"},
 									{
 										"type" : "layout.container.minBounds",
 										"options" : {
 											"fixedX" : true,
 											"ignoreChildsWithId" : [
 												"http://b3mn.org/stencilset/bpmn2.0#Lane",
 												"http://b3mn.org/stencilset/bpmn2.0#StartNoneEvent"
 											]
 										}
 									}
 								],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				/** "subprocess", **/
				/** "loopcharacteristics", **/
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#fafad2", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"description_ja":"アクション開始時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"description_ja":"アクション終了時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"ScriptLanguage",
					"value":"java",
					"description":"Defines the script language.",
					"description_ja":"スクリプト言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"java",
							"value":"java"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                        
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Comma-separated variable definitions",
					"description_ja":"カンマ区切りの変数定義",
					"readonly":false,
					"optional":true
				}
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainArtifacts",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"AdHocSubprocess",
			"title" :			"AdHoc Subprocess",
			"groups" :			["Activities"],
			"description" :		"A subprocess is a decomposable activity. An expanded subprocess contains a valid BPMN diagram.",
			"description_ja" :"サブプロセスは分解不可のアクティビティです。拡張サブプロセスには、有効なBPMNダイアグラムが含まれています。",
			"view" :			"activity/subprocess.adhoc.svg",
			"icon" :			"activity/expanded.subprocess.png",
 			"layout" : 			[
 									{"type" : "layout.bpmn2_0.subprocess"},
 									{"type" : "layout.container.dockers"},
 									{
 										"type" : "layout.container.minBounds",
 										"options" : {
 											"fixedX" : true,
 											"ignoreChildsWithId" : [
 												"http://b3mn.org/stencilset/bpmn2.0#Lane",
 												"http://b3mn.org/stencilset/bpmn2.0#StartNoneEvent"
 											]
 										}
 									}
 								],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"adhocsubprocess",
				/** "loopcharacteristics", **/
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#fafad2", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#fafad2",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"description_ja":"アクション開始時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"description_ja":"アクション終了時",
					"readonly":false,
					"optional":true
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"ScriptLanguage",
					"value":"java",
					"description":"Defines the script language.",
					"description_ja":"スクリプト言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"java",
							"value":"java"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                        
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Comma-separated variable definitions",
					"description_ja":"カンマ区切りの変数定義",
					"readonly":false,
					"optional":true
				}
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainArtifacts",
				"ActivitiesMorph"
			]
		},
		/** {
			"type" : 			"node",
			"id" :				"CollapsedEventSubprocess",
			"title" : 			"Collapsed Event-Subprocess",
			"groups" :			["Activities"],
			"description" :		"An Event-Subprocess is placed within another subprocess. It becomes active when its start event gets triggered and can interrupt the Subprocess context or run in parallel (non-interrupting). It can be linked to another diagram.",
			"description_ja" :"イベントサブプロセスは、別のサブプロセスの中に配置されます。開始イベントがトリガーされるとアクティブになり、サブプロセスコンテキストの割り込みや並列実行（割り込みなし）が可能になります。別のダイアグラムにリンクできます。",
			"view" :			"activity/event.subprocess.collapsed.svg",
			"icon" :			"activity/event.subprocess.collapsed.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"subprocess",
				"interrupting",
				"loopcharacteristics",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Event-Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"startevent",
					"type":"Choice",
					"title":"Start-Event",
					"value":"Message",
					"description":"",
					"readonly":false,
					"optional":false,
					"items":[
						{
							"id":"c1",
							"title":"Message",
							"value":"Message",
							"icon" : "activity/list/event.message.png",
							"refToView":"message"
						},
						{
							"id":"c2",
							"title":"Timer",
							"value":"Timer",
							"icon" : "activity/list/event.timer.png",
							"refToView":"timer"
						},
						{
							"id":"c3",
							"title":"Escalation",
							"value":"Escalation",
							"icon" : "activity/list/event.escalation.png",
							"refToView":"escalation"
						},
						{
							"id":"c4",
							"title":"Conditional",
							"value":"Conditional",
							"icon" : "activity/list/event.conditional.png",
							"refToView":"conditional"
						},
						{
							"id":"c5",
							"title":"Error",
							"value":"Error",
							"icon" : "activity/list/event.error.png",
							"refToView":"error"	
						},
						{
							"id":"c6",
							"title":"Compensation",
							"value": "Compensation",
							"icon" : "activity/list/event.compensation.png",
							"refToView":"compensationStart"
						},
						{
							"id":"c7",
							"title":"Signal",
							"value":"Signal",
							"icon" : "activity/list/event.signal.png",
							"refToView":"signal"
						},
						{
							"id":"c8",
							"title":"Multiple",
							"value":"Multiple",
							"icon" : "activity/list/event.multiple.png",
							"refToView":"multiple"
						},
						{
							"id":"c9",
							"title":"Multiple (Parallel)",
							"value":"MultipleParallel",
							"icon" : "activity/list/event.multiple.parallel.png",
							"refToView":"multipleParallel"
						}
					]
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}	
			],
			"roles": 			[
				"all",
				"fromtoall",
				"canContainArtifacts",
				"EventActivitiesMorph"
			]
		}, 
		/** {
			"type" : 			"node",
			"id" :				"EventSubprocess",
			"title" :			"Event-Subprocess",
			"groups" :			["Activities"],
			"description" :		"An Event-Subprocess is placed within another Subprocess. It becomes active when its start event gets triggered and can interrupt the Subprocess context or run in parallel (non-interrupting).",
			"description_ja" :"イベントサブプロセスは、別のサブプロセスの中に配置されます。開始イベントがトリガーされるとアクティブになり、サブプロセスコンテキストの割り込みや並列実行（割り込みなし）が可能になります。",
			"view" :			"activity/event.subprocess.svg",
			"icon" :			"activity/event.subprocess.png",
 			"layout" : 			[{"type" : "layout.bpmn2_0.subprocess"}],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"subprocess",
				"loopcharacteristics",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Event-Sub-Process",
					"description":"The Type of Activity.",
					"description_ja":"アクティビティのタイプ。",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},	
				{
					"id":"isatransaction",
					"type":"Boolean",
					"title":"is a Transaction",
					"value":false,
					"description":"A Transaction is a set of activities that logically belongs together; it might follow a specified transaction protocol.",
					"description_ja":"トランザクションは、論理的にまとめられているアクティビティのセットです。指定されたトランザクションプロトコルに従います。",
					"readonly":true,
					"optional":false
				},
				{
					"id":"callacitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
					"value":false,
					"description":"a Call Activity is a wrapper for a globally defined Sub-Process that is reused in the current process.",
                                        "description_ja":"コールアクティビティは、現在のプロセスで再利用されているグローバル定義サブプロセスのラッパーです。",
					"readonly":true,
					"optional":"true"
				}
			],
			"roles"	:			[
				"all",
				"fromtoall",
				"canContainArtifacts",
				"EventActivitiesMorph"
			]
		}, **/
		
		// Gateways
		
		{
			"type" : 			"node",
			"id" :				"Exclusive_Databased_Gateway",
			"title" :			"Data-based Exclusive (XOR) Gateway",
			"description" :		"When splitting, it routes the sequence flow to exactly one of the outgoing branches based on conditions. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.",
			"description_ja" :"分岐する際は、条件に基づいて必ず出力分岐の1つにシーケンスフローの経路を取ります。合流する際は、入力分岐の1つが完了するまで待ってから出力フローをトリガーします。",
			"groups" : 			["Gateways"],
			"view" : 			"gateway/exclusive.databased.svg",
			"icon" : 			"gateway/exclusive.databased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"Gateway type",
					"title":"Gateway-Type",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xortype",
					"type":"String",
					"title":"XOR type",
					"value":"Data",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"markervisible",
					"type":"Boolean",
					"title":"X-Marker visible",
					"value":"true",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"cross"
				},		
				{
					"id":"defaultgate",
					"type":"String",
					"title":"Default gate",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
				//,
				/**{
					"id":"gate_outgoingsequenceflow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},**/
				/**{
					"id":"gate_assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/	
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"EventbasedGateway",
			"title" :			"Event-based Gateway",
			"groups" :			["Gateways"],
			"description" :		"Is always followed by catching events or receive tasks. Sequence flow is routed to the subsequent event/task which happens first.",
			"description_ja" :"常にキャッチイベントまたは受信タスクが続きます。シーケンスフローは、後続のイベント/タスクのうち最初に発生したものを経路に取ります。",
			"view" :			"gateway/eventbased.svg",
			"icon" :			"gateway/eventbased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"eventtype",
					"type":"Choice",
					"title":"Type",
					"value":"exclusive",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"Exclusive (standard)",
							"value":"exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":"default"
						},
						{
							"id":"c2",
							"title":"Exclusive Instantiation",
							"value":"instantiate_exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":["default","instantiate"]
						},
						{
							"id":"c3",
							"title":"Parallel Instantiation",
							"value":"instantiate_parallel",
							"icon" : "gateway/list/eventbased.parallel.png",
							"refToView":["parallel","instantiate"]
						}
					]
				}
			],
			"roles":			[
				"all",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"fromtoall",
				"GatewaysMorph",
				"EventbasedGateway"
			]
		},
		{
			"type" : 			"node",
			"id" :				"ParallelGateway",
			"title" :			"Parallel Gateway",
			"groups" :			["Gateways"],
			"description" :		"When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.",
			"description_ja" :"シーケンスフローの分岐に使用されると、すべての出力分岐が同時にアクティブ化されます。並列分岐が合流するときは、すべての入力分岐が完了するまで待ってから、出力フローをトリガーします。",
			"view" :			"gateway/parallel.svg",
			"icon" :			"gateway/parallel.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"InclusiveGateway",
			"title" :			"Inclusive Gateway",
			"groups" :			["Gateways"],
			"description" :		"When splitting, one or more branches are activated based on branching conditions. When merging, it awaits all active incoming branches to complete.",
			"description_ja" :"分岐する際は、分岐条件に基づいて1つまたは複数の分岐がアクティブ化されます。合流する際は、アクティブなすべての入力分岐が完了するまで待ちます。",
			"view" :			"gateway/inclusive.svg",
			"icon" :			"gateway/inclusive.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					"value":"OR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"defaultgate",
					"type":"String",
					"title":"DefaultGate",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
				/**,
				{
					"id":"gate_outgoingsequenceflow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_assignments",
					"type":"String",
					"title":"[Gate] Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		/** {
			"type": "node",
			"id":"ComplexGateway",
			"title":"Complex Gateway",
			"groups":["Gateways"],
			"description":"It triggers one or more branches based on complex conditions or verbal descriptions. Use it sparingly as the semantics might not be clear.",
			"description_ja":"複合条件または口頭の説明に基づいて、1つまたは複数の分岐をトリガーします。セマンティクスが明瞭でなくなるので使用は控えめにしてください。",
			"view":"gateway/complex.svg",
			"icon":"gateway/complex.png",
			"propertyPackages" : [
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					"value":"Complex",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"activationcondition",
					"type":"String",
					"title":"ActivationCondition",
					"value":"",
					"popular":true,
					"description":"Determines which combination of incoming tokens will be synchronized for activation of the Gateway.",
					"description_ja":"ゲートウェイのアクティブ化のために同期する入力トークンの組み合わせを決定します。",
					"readonly":false,
					"optional":true
				},
				{
					"id":"incomingcondition",
					"type":"String",
					"title":"IncomingCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"outgoingcondition",
					"type":"String",
					"title":"OutgoingCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				}
			],
			"roles": [
				"all",
				"sequence_start",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		}, **/
		
		// Swimlanes
		/** {
			"type" : 			"node",
			"id" :				"Pool",
			"title" :			"Pool",
			"groups" :			["Swimlanes"],
			"description" :		"Pools and Lanes represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system.",
			"description_ja" :"プールとレーンは、プロセス内のアクティビティの責任を表します。プールまたはレーンには、組織、ロール、またはシステムを割り当てることができます。",
			"view" :			"swimlane/pool.svg",
			"icon" :			"swimlane/pool.png",
			"propertyPackages": [
				"baseAttributes",
				"pool",
				"process",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"canContainArtifacts"				
			],
			"layout" : [{"type" : "layout.bpmn2_0.pool"}]
		},**/
		/**{
			"type" : 			"node",
			"id" :				"CollapsedPool",
			"title" :			"Collapsed Pool",
			"groups" :			["Swimlanes"],
			"description" :		"Collapsed Pools hide all internals of the contained processes.",
			"description_ja" :"折りたたまれたプールは、中に含まれるプロセスの内部すべてを隠蔽します。",
			"view" :			"swimlane/collapsed.pool.svg",
			"icon" :			"swimlane/lane.png",
			"propertyPackages": [
				"baseAttributes",
				"pool",
				"process",
				"bgColor"
			],
			"properties" : 		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles" :		 	[
				"all",
				"messageflow_start",
				"messageflow_end",
				"fromtoall"				
			]
		},**/
		{
			"type" : 			"node",
			"id" :				"Lane",
			"title" :			"Lane",
			"groups" :			["Swimlanes"],
			"description" :		"Pools and Lanes represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system. Lanes sub-divide pools or other lanes hierarchically.",
			"description_ja" :"プールとレーンは、プロセス内のアクティビティの責任を表します。プールまたはレーンには、組織、ロール、またはシステムを割り当てることができます。レーンはプールまたは他のレーンを階層的に分割します。",
			"view" :			"swimlane/lane.svg",
			"icon" :			"swimlane/lane.png",
			"propertyPackages": [
				"baseAttributes"
			],
			"properties" : 		[
				{
					"id":"showcaption",
					"type":"Boolean",
					"title":"ShowCaption",
					"value":"true",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView": ["caption", "captionDisableAntialiasing"],
					"fill":true,
					"visible":false,
					"stroke":false,
					"hidden":true
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles": [
			    "all", 
				"PoolChild",
				"fromtoall",
				"canContainArtifacts"				
			],
			"layout" : [
						{"type" : "layout.bpmn11.lane"},
						{
							"type" : "layout.container.minBounds",
							"options" : {
								"ignoreChildsWithId" : [
									"http://b3mn.org/stencilset/bpmn2.0#Lane"
								]
							}
						}
			]
		},
        /**{
            "type" :            "node",
            "id" :              "processparticipant",
            "title" :           "Additional Participant",
            "groups" :          ["Swimlanes"],
            "description" :     "he additional participant can be connected to a task or sub process. It is used to visualize additional associations of roles or individuals to the respective activity (e.g. responsibility, informed persons, etc.).",
		    "description_ja" :"追加の参加者はタスクまたはサブプロセスに接続できます。ロールまたは個人の追加の関連を対応する各アクティビティ（責任、通知された人物など）に対して可視化するために使用されます。",
            "view" :            "swimlane/process.participant.svg",
            "icon" :            "swimlane/process.participant.png",
            "defaultAlign" :    "northeast",
            "propertyPackages": [
                "baseAttributes",
                "flowElement",
                "artifact",
                "bgColor"
            ],
            "roles": [
                "all",
                "from_participant",
                "to_participant",
                "fromtoall",
                "eventSubprocessElement"
            ]
        },**/
		
		// Artifacts
		
		{
			"type" : 			"node",
			"id" : 				"Group",
			"title" :			"Group",
			"groups" :			["Artifacts"],
			"description" :		"An arbitrary set of objects can be defined as a Group to show that they logically belong together.",
			"description_ja" :"任意のオブジェクトのセットをグループとして定義し、論理的なまとまりを表すことができます。",
			"view" :			"artifact/group.svg",
			"icon":				"artifact/group.png",
			"propertyPackages" : [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : [
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
					"value":"Group",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": [
				"all",
				"fromtoall",
				"canContainArtifacts"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"TextAnnotation",
			"title" :			"Text Annotation",
			"groups" :			["Artifacts"],
			"description" :		"Any object can be associated with a Text Annotation to provide additional documentation.",
			"description_ja" :"任意のオブジェクトをテキスト注釈に関連付け、追加のドキュメントとして提供することができます。",
			"view" :			"artifact/text.annotation.svg",
			"icon" :			"artifact/text.annotation.png",
			"defaultAlign" :	"northeast",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : 		[
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
					"value":"Annotation",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": [
				"all",
				"from_artifact",
				"to_artifact",
				"TextAnnotationMorph"
			]
		},
		
		// Data Objects
		{
			"type" : 			"node",
			"id" :				"DataObject",
			"title" :			"Data Object",
			"description" :		"A Data Object represents information flowing through the process, such as business documents, e-mails or letters.",
			"description_ja" :"データオブジェクトは、ビジネスドキュメント、電子メール、手紙など、プロセスを流れる情報を表します。",
			"groups" :			["Data Objects"],
			"view" :			"dataobject/data.object.svg",
			"icon" :			"dataobject/data.object.png",
			"defaultAlign" :	"southeast",
			"propertyPackages":	[
				"baseAttributes",
				"flowElement",
				"properties",
				"bgColor"
			],
			"properties" :		[
				/**{
					"id":"state",
					"type":"String",
					"title":"State",
					"value":"",
					"description":"",
					"refToView":"text_state",
					"readonly":false,
					"optional":true,
					"directlyEditable":false
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#C0C0C0", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#C0C0C0",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"input_output",
					"type":"Choice",
					"title":"Input/Output",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"None",
							"value":"None",						
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Input",
							"value":"Input",
							"icon" : "dataobject/list/input.png",
							"refToView":"input"
						},
						{
							"id":"c3",
							"title":"Output",
							"value":"Output",
							"icon" : "dataobject/list/output.png",
							"refToView":"output"
						}
					]
				},
				{
					"id":"standardtype",
					"type":"Choice",
					"title":"Standard Type",
					"value":"None",
					"description":"Standard Type",
					"readonly":false,
					"optional":true,
					"items":[
						{
							"id":"c1",
							"title":"Object",
							"value":"Object"
						},
						{
							"id":"c2",
							"title":"Boolean",
							"value":"Boolean"
						},
						{
							"id":"c3",
							"title":"Float",
							"value":"Float"
						},
						{
							"id":"c3",
							"title":"Integer",
							"value":"Integer"
						},
						{
							"id":"c3",
							"title":"List",
							"value":"List"
						},
						{
							"id":"c3",
							"title":"String",
							"value":"String"
						}
					]
				},
				{
                    "id":"customtype",
                    "type":"Text",
                    "title":"Custom Type",
                    "value":"",
                    "description":"Custom Type",
                    "readonly":false,
                    "optional":true,
                    "refToView":"",
                    "length":""
                }
				/**,		
				{
					"id" : "iscollection",
					"type" : "Boolean",
					"title" : "is Collection",
					"value" : false,
					"description" : "A Collection Data Object represents a collection of information, e.g. a list of order items.",
					"description_ja" : "コレクションデータオブジェクトは、発注品目のリストなど、情報のコレクションを表します。",
					"readonly" : false,
					"optional" : true,
					"refToView" : "collection"
				}**/
			],
			"roles" : 			[
				"all",
				"from_task_event",
				"to_task_event",
				"fromtoall",
				"DataObjectMorph"
			]
		},
//		{
//			"type" : 			"node",
//			"id" :				"ITSystem",
//			"title" :			"IT System",
//			"groups" :			["Artifacts"],
//			"description" : 	"An IT System can be associated with an activity. It is a system or application used while fulfilling the activity.",
//			"description_ja" :"ITシステムはアクティビティに関連付けることができます。アクティビティを実行する際に使用されるシステムまたはアプリケーションです。",
//			"view" :			"dataobject/it.system.svg",
//			"icon" : 			"dataobject/it.system.png",
//			"propertyPackages" : [
//				"baseAttributes",
//				"flowElement"				
//			],
//			"properties" : [
//				{
//					"id":"bgcolor",
//					"type":"Color",
//					"title":"BackgroundColor",
//					"value":"#e1e1e1",
//					"description":"",
//					"readonly":false,
//					"optional":false,
//					"refToView":"fill_el",
//					"fill":true,
//					"stroke":false
//				}
//			],
//			"roles" :			[
//			    "all",
//			    "from_task_event",
//			    "to_task_event",
//			    "fromtoall",
//			    "DataObjectMorph"
//			]
//		},
		/**{
			"type" : 			"node",
			"id" :				"DataStore",
			"title" :			"Data Store",
			"groups" :			["Data Objects"],
			"description" :		"A Data Store is a place where the process can read or wirte date, e.g. a database or a filling cabinet. It persists beyond the lifetime of the process instance.",
			"description_ja" :"データストアは、データベースやファイリングキャビネットなど、プロセスがデータを読み書きできる場所です。プロセスインスタンスの寿命を超えて存続します。",
			"view" :			"dataobject/data.store.svg",
			"icon" :			"dataobject/data.store.png",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"itemAwareElement",
				"bgColor"
			],
			"properties" :		[
				{
					"id" : "capacity",
					"type" : "Integer",
					"title" : "Capacity",
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length" : ""
				},
				{
					"id" : "isUnlimited",
					"type" : "Boolean",
					"title" : "is Unlimited",
					"value" : false,
					"description" : "",
					"readonly" : false,
					"optional" : true
				},
				{
					"id" : "dataStoreRef",
					"type" : "String",
					"title" : "DataStoreRef",
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length": 50,
					"wrapLines" : true
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles" :			[
				"all",
				"fromtoall",
				"to_task_event",
				"from_task_event",
				"DataObjectMorph"
			]
		},**/
		/** {
			"type" :			"node",
			"id" :				"Message",
			"title" :			"Message",
			"groups" :			["Data Objects"],
			"description" :		"A Message is used to depict the contents of a communication between two Participants.",
			"description_ja" :"メッセージは、2人の参加者の間のコミュニケーションを表現するために使用されます。",
			"view" :			"dataobject/message.svg",
			"icon" :			"dataobject/message.png",
			"propertyPackages":	[
				"baseAttributes",
				"flowElement",
				"itemAwareElement"
			],
			"properties" :		[
				{
					"id" : "structureref",
					"type" : "String",
					"title" : "StructureRef",
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "initiating",
					"type" : "Boolean",
					"title" : "is initiating",
					"description" : "",
					"value" : true,
					"inverseBoolean":true,
					"refToView" : ["nonInitiating", "nonInitiating2"],
					"readonly" : false,
					"optional" : true
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ffffff",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":["bg_frame","bg_frame2"],
					"fill":true,
					"stroke":false,
					"hidden":true
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles" :			[
				"all",
				"fromtoall",
				"DataObjectMorph"
			]
		}, **/
		
		// Start Events
		
		{
			"type" : 			"node",
			"id": 				"StartNoneEvent",
			"title": 			"Start Event",
			"groups" : 			["Start Events"],
			"description" : 	"Untyped start event.",
			"description_ja" :"タイプのない開始イベント。",
			"view" : 			"startevent/none.svg",
			"icon" : 			"startevent/none.png",
			"propertyPackages":	[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor"
			],
			"roles" : [
				"all",
				"Startevents_all",
				"sequence_start",
				"choreography_sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		{
			"type" :		 	"node",
			"id" :				"StartMessageEvent",
			"title" : 			"Start Message Event",
			"groups" :			["Start Events"],
			"description" :		"A process instance is started on receive of a message.",
			"description_ja" :"プロセスインスタンスは、メッセージを受信したときに開始します。",
			"view" :			"startevent/message.svg",
			"icon" :			"startevent/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"sequence_start",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"description_ja":"メッセージ参照",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type" :			"node",
			"id" :				"StartTimerEvent",
			"title" :			"Start Timer Event",
			"groups" :			["Start Events"],
			"description" :		"A process instance is started on cyclic timer events, points in time, after time spans or timeouts.",
			"description_ja" :"プロセスインスタンスは、周期タイマイベントの発生時、特定の時刻、特定の時間経過後、またはタイムアウト後に開始します。",
			"view" :			"startevent/timer.svg",
			"icon" :			"startevent/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"choreography_sequence_start",
				"StartEventsMorph"
			],
			"properties": [
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				/**{
					"id":"timedate",
					"type":"String",
					"title":"Time Date",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"timeduration",
					"type":"Text",
					"title":"Time Duration",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecycle",
					"type":"Text",
					"title":"Time Cycle",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecyclelanguage",
					"type":"Choice",
					"title":"Time Cycle Language",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"nolang",
							"title":"None",
							"value":"none"
						},
						{
							"id":"cron",
							"title":"Cron",
							"value":"cron"
						}
					]
				}
			]
		},
		{
			"type": "node",
			"id":"StartEscalationEvent",
			"title":"Start Escalation Event",
			"groups":["Start Events"],
			"description":"Reacts on an escalation to another role in the organization. This event is only used inside of a event subprocess.",
			"description_ja":"組織の別のロールへのエスカレーションが発生したときに反応します。このイベントは、イベントサブプロセス内部でのみ使用されます。",
			"view":"startevent/escalation.svg",
			"icon":"startevent/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : [
			    "all",
				"eventSubprocessElement",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"description_ja":"エスカレーションコード",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartConditionalEvent",
			"title" :			"Start Conditional Event",
			"groups" :			["Start Events"],
			"description" :		"A process instance is started based on changed business conditions or matching business rules.",
			"description_ja" :"プロセスインスタンスは、ビジネス条件の変化またはビジネスルールの一致に基づいて開始します。",
			"view" :			"startevent/conditional.svg",
			"icon" 	:			"startevent/conditional.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"condition",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"choreography_sequence_start",
				"StartEventsMorph"
			],
			"properties": [
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Conditional",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"conditionlanguage",
					"type":"Choice",
					"title":"Language",
					"value":"drools",
					"description":"Defines the condition language.",
					"description_ja":"条件言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"drools",
							"value":"drools"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                               
				},
				{
					"id":"conditionexpression",
					"type":"Text",
					"title":"Expression",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true                                        
				}
			]
		},
		{
			"type": "node",
			"id":"StartErrorEvent",
			"title":"Start Error Event",
			"groups":["Start Events"],
			"description":"Catches named errors. This event is only used inside of a event subprocess.",
			"description_ja":"名前付きエラーをキャッチします。このイベントは、イベントサブプロセス内部でのみ使用されます。",
			"view":"startevent/error.svg",
			"icon":"startevent/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"StartCompensationEvent",
			"title":"Start Compensation Event",
			"groups":["Start Events"],
			"description":"Compensation handling. This event is only used inside of a event subprocess.",
			"description_ja":"Compensation処理。このイベントは、イベントサブプロセス内部でのみ使用されます。",
			"view":"startevent/compensation.svg",
			"icon":"startevent/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor",
				"compensation"
			],
			"roles": [
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartSignalEvent",
			"title" :			"Start Signal Event",
			"groups" :			["Start Events"],
			"description" :		"A process instance is started based on signalling across different processes. (One signal thrown can be caught multiple times)",
			"description_ja" :"プロセスインスタンスは、複数のプロセスに渡るシグナリングに基づいて開始します（スローされた1つのシグナルが複数回キャッチされます）。",
			"view" :			"startevent/signal.svg",
			"icon" :			"startevent/signal.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"Startevents_all",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_start",
				"StartEventsMorph"
			],
			"properties": [
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#9acd32", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#9acd32",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"signalref",
					"type":"Text",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		/**{
			"type" :		 	"node",
			"id" :				"StartMultipleEvent",
			"title" :			"Start Multiple Event",
			"groups" :			["Start Events"],
			"description" :		"A process instance is started upon occurence of one out of a set of possible events.",
			"description_ja" :"プロセスインスタンスは、可能性のあるイベントのセットのうちいずれか1つが発生したときに開始します。",
			"view" :			"startevent/multiple.svg",
			"icon" :			"startevent/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"messageflow_end",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"choreography_sequence_start",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		/**{
			"type": "node",
			"id":"StartParallelMultipleEvent",
			"title":"Start Parallel Multiple Event",
			"groups":["Start Events"],
			"description":"A process instance is started upon occurence of all possible events.",
			"description_ja":"プロセスインスタンスは、可能性のあるすべてのイベントが発生したときに開始します。",
			"view":"startevent/multiple.parallel.svg",
			"icon":"startevent/multiple.parallel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" :			[
				"all",
				"messageflow_end",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"choreography_sequence_start",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Parallel Multiple",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		
		// Intermediate Events Catching
		{
			"type": "node",
			"id":"IntermediateMessageEventCatching",
			"title":"Message Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"This event reacts on the arrival of a message.",
			"description_ja":"このイベントは、メッセージの到着に反応します。",
			"view":"intermediateevent/message.catching.svg",
			"icon":"catching/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_end",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"EventOnChoreographyActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"description_ja":"メッセージ参照",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateTimerEvent",
			"title":"Timer Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a certain point in time is reached or a particular duration is over.",
			"description_ja":"プロセスの実行は、特定の時刻に達するか、一定の時間が経過するまで遅延します。",
			"view":"intermediateevent/timer.svg",
			"icon":"catching/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"EventOnChoreographyActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Timer",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				/**{
					"id":"timedate",
					"type":"String",
					"title":"Time Date",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"timeduration",
					"type":"Text",
					"title":"Time Duration",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecycle",
					"type":"Text",
					"title":"Time Cycle",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecyclelanguage",
					"type":"Choice",
					"title":"Time Cycle Language",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"nolang",
							"title":"None",
							"value":"none"
						},
						{
							"id":"cron",
							"title":"Cron",
							"value":"cron"
						}
					]
				},
				{
                    "id":"waittime",
                    "type":"Float",
                    "title":"Wait Time",
                    "value":"0",
                    "description":"",
                    "description_ja":"",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "min" : "0"
                },
                {
                    "id":"timeunit",
                    "type":"Choice",
                    "title":"Time Unit",
                    "value":"",
                    "description":"Time unit options (seconds, minutes, hours)",
                    "description_ja":"Time unit options (seconds, minutes, hours)",
                    "readonly":false,
                    "optional":true,
                    "simulation" : true,
                    "items": [
                        {
                            "id": "c1",
                            "title":"milliseconds",
                            "value":"ms"
                        },
                        {
                            "id": "c2",
                            "title": "seconds",
                            "value": "s"
                        },
                        {
                            "id": "c3",
                            "title": "minutes",
                            "value": "min"
                        },
                        {
                            "id": "c4",
                            "title": "hours",
                            "value": "hour"
                        },
                        {
                            "id": "c5",
                            "title": "days",
                            "value": "day"
                        },
                        {
                            "id": "c6",
                            "title": "years",
                            "value": "year"
                        }
                    ]
                }
			]
		},
		{
			"type": "node",
			"id":"IntermediateEscalationEvent",
			"title":"Escalation Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"This event reacts on the escalation of a case. It needs to be attached to the boundary of an activity.",
			"description_ja":"このイベントは、ケースのエスカレーションに反応します。アクティビティのBoundaryにアタッチする必要があります。",
			"view":"intermediateevent/escalation.catching.svg",
			"icon":"catching/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
			    "all",
				"eventSubprocesElement",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"description_ja":"エスカレーションコード",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateConditionalEvent",
			"title":"Conditional Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a changed business condition or business rule matches.",
			"description_ja":"プロセスの実行は、ビジネス条件が変化するか、ビジネスルールが一致するまで遅延します。",
			"view":"intermediateevent/conditional.svg",
			"icon":"catching/conditional.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"condition",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"EventOnChoreographyActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Rule",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"conditionlanguage",
					"type":"Choice",
					"title":"Language",
					"value":"drools",
					"description":"Defines the condition language.",
					"description_ja":"条件言語を定義します。",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"drools",
							"value":"drools"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                               
				},
				{
					"id":"conditionexpression",
					"type":"Text",
					"title":"Expression",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true
				}
			]
		},
		/**{
			"type": "node",
			"id":"IntermediateLinkEventCatching",
			"title":"Link Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Off-page connectors. Two corresponding link events correspond to a sequence flow.",
			"description_ja":"オフページコネクタ。2つの対応するリンクイベントがシーケンスフローに対応します。
			"view":"intermediateevent/link.catching.svg",
			"icon":"catching/link.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_start",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
                    "id":"entry",
                    "type":"DiagramLink",
                    "title":"Diagram Link",
                    "value":"",
                    "description":"",
                    "readonly":false,
					"refToView" : "diagramLink",
                    "optional":false
                },
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Link",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},**/
		{
			"type": "node",
			"id":"IntermediateErrorEvent",
			"title":"Error Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Catches a named error, which was thrown be an inner scope (e.g. subprocess). This event needs to be attached to the boundary of an activity.",
			"description_ja":"内側のスコープ（サブプロセスなど）でスローされた名前付きエラーをキャッチします。このイベントは、アクティビティのBoundaryにアタッチする必要があります。",
			"view":"intermediateevent/error.svg",
			"icon":"catching/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		/**{
			"type": "node",
			"id":"IntermediateCancelEvent",
			"title":"Cancel Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Reacts on a transaction, which was cancelled inside an inner scope (e.g. subprocess). This event needs to be attached to the boundary of an activity.",
			"description_ja":"内側のスコープ（サブプロセスなど）内でキャンセルされたトランザクションに反応します。このイベントは、アクティビティのBoundaryにアタッチする必要があります。",
			"view":"intermediateevent/cancel.svg",
			"icon":"catching/cancel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"EventOnChoreographyActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Cancel",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},**/
		/**{
			"type": "node",
			"id":"IntermediateCompensationEventCatching",
			"title":"Compensation Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Compensation handling in case of partially failed operations. This event needs to be attached to the boundary of an activity.",
			"description_ja":"オペレーションが部分的に失敗した場合のCompensation処理。このイベントは、アクティビティのBoundaryにアタッチする必要があります。",
			"view":"intermediateevent/compensation.catching.svg",
			"icon":"catching/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"boundaryevent",
				"compensation",
				"bgColor"
			],
			"roles":[
				"all",
				"from_task_event",
				"fromtoall",
				"EventOnChoreographyActivityBoundary",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},**/
		{
			"type": "node",
			"id":"IntermediateSignalEventCatching",
			"title":"Signal Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a particular signal is catched. Signalling can happen across different processes.",
			"description_ja":"プロセスの実行は、特定のシグナルがキャッチされるまで遅延します。シグナリングは異なるプロセス間でも発生可能です。",
			"view":"intermediateevent/signal.catching.svg",
			"icon":"catching/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				},**/
				{
					"id":"signalref",
					"type":"Text",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		/**{
			"type": "node",
			"id":"IntermediateMultipleEventCatching",
			"title":"Multiple Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until one out of a set of possible events is triggered.",
			"description_ja":"プロセスの実行は、可能性のあるイベントのセットのうちのいずれか1つがトリガーされるまで遅延します。",
			"view":"intermediateevent/multiple.catching.svg",
			"icon":"catching/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"messageflow_end",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},**/
		/**{
			"type": "node",
			"id":"IntermediateParallelMultipleEventCatching",
			"title":"Parallel Multiple Intermediate Event",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until all possible events have been triggered.",
			"description_ja":"プロセスの実行は、可能性のあるすべてのイベントがトリガーされるまで遅延します。",
			"view":"intermediateevent/multiple.parallel.svg",
			"icon":"catching/multiple.parallel.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_end",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_start",
				"choreography_sequence_end",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}
			]
		},**/
		
		// Intermediate Events Throwing
		{
			"type": "node",
			"id":"IntermediateEvent",
			"title":"Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"This event marks the occurrence of a particular business event. Process execution is not delayed.",
			"description_ja":"このイベントは、特定のビジネスイベントの発生をマークします。プロセスの実行は遅延しません。",
			"view":"intermediateevent/none.svg",
			"icon":"throwing/none.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_end",
				"choreography_sequence_start",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"length":""
				}**/
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventThrowing",
			"title":"Message Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"The throwing message event sends a message to a communication partner and afterwards continues process execution.",
			"description_ja":"メッセージスローイベントは、コミュニケーション相手にメッセージを送信し、その後にプロセスの実行を続行します。",
			"view":"intermediateevent/message.throwing.svg",
			"icon":"throwing/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_start",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"description_ja":"メッセージ参照",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateEscalationEventThrowing",
			"title":"Escalation Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"This event triggers the escalation of the case to another role in the organisation. After this, process execution is resumed.",
			"description_ja":"このイベントは、組織内の別のロールへのケースのエスカレーションをトリガーします。その後、プロセスの実行は再開されます。",
			"view":"intermediateevent/escalation.throwing.svg",
			"icon":"throwing/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
			    "all",
				"eventSubprocessElement",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"description_ja":"エスカレーションコード",
					"readonly":false,
					"optional":true
				}
			]
		},
		/** {
			"type": "node",
			"id":"IntermediateLinkEventThrowing",
			"title":"Link Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"Off-page connectors. Two corresponding link events correspond to a sequence flow.",
			"description_ja":"オフページコネクタ。2つの対応するリンクイベントがシーケンスフローに対応します。
			"view":"intermediateevent/link.throwing.svg",
			"icon":"throwing/link.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_end",
				"IntermediateEventsMorph"
			],
			"properties": [
			     {
                    "id":"entry",
                    "type":"DiagramLink",
                    "title":"Diagram Link",
                    "value":"",
                    "description":"",
					"refToView": "diagramLink",
                    "readonly":false,
                    "optional":false
                },
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Link",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		/**{
			"type": "node",
			"id":"IntermediateCompensationEventThrowing",
			"title":"Compensation Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"Triggers a compensation.",
			"description_ja":"Compensationをトリガーします。",
			"view":"intermediateevent/compensation.throwing.svg",
			"icon":"throwing/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor",
				"compensationThrowing",
				"compensation"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		{
			"type": "node",
			"id":"IntermediateSignalEventThrowing",
			"title":"Signal Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"The throwing signal event fires up a signal. Afterwards it continues process execution. One signal thrown can be caught multiple times by different catching signal events.",
			"description_ja":"シグナルスローイベントは、シグナルを発信します。その後、プロセスの実行を続行します。スローされた1つのシグナルは、異なるシグナルキャッチイベントによって複数回キャッチされることがあります。",
			"view":"intermediateevent/signal.throwing.svg",
			"icon":"throwing/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"signalref",
					"type":"Text",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		/**{
			"type": "node",
			"id":"IntermediateMultipleEventThrowing",
			"title":"Multiple Intermediate Event",
			"groups":["Throwing Intermediate Events"],
			"description":"The throwing multiple event throws one out of a set of possible events. Afterwards it continues process execution.",
			"description_ja":"マルチスローイベントは、可能性のあるイベントのセットのうちいずれか1つをスローします。その後、プロセスの実行を続行します。",
			"view":"intermediateevent/multiple.throwing.svg",
			"icon":"throwing/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_start",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		
		// End Events
		
		{
			"type" : "node",
			"id": "EndNoneEvent",
			"title": "End Event",
			"groups" : ["End Events"],
			"description" : "The untyped end event typically marks the standard end of a process.",
			"description_ja" : "タイプなし終了イベントは、通常、プロセスの標準的な終了をマークします。",
			"view" : "endevent/none.svg",
			"icon" : "endevent/none.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles" : [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_end",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		{
			"type": "node",
			"id":"EndMessageEvent",
			"title":"Message End Event",
			"groups":["End Events"],
			"description":"At the end of the process, a message is sent.",
			"description_ja":"プロセスの終了時にメッセージが送信されます。",
			"view":"endevent/message.svg",
			"icon":"endevent/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Message",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"description_ja":"メッセージ参照",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"EndEscalationEvent",
			"title":"Escalation End Event",
			"groups":["End Events"],
			"description":"The case is escalated with the end of the process.",
			"description_ja":"ケースはプロセス終了時にエスカレーションされます。",
			"view":"endevent/escalation.svg",
			"icon":"endevent/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
			    "all",
				"eventSubprocessElement",
				"EndEventsMorph",
				"Endevents_all",
				"sequence_end"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Escalation",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"description_ja":"エスカレーションコード",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"EndErrorEvent",
			"title":"Error End Event",
			"groups":["End Events"],
			"description":"The process ends in an error state. As result a named error is thrown.",
			"description_ja":"プロセスはエラー状態で終了します。結果として名前付きエラーがスローされます。",
			"view":"endevent/error.svg",
			"icon":"endevent/error.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Error",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"EndCancelEvent",
			"title":"Cancel End Event",
			"groups":["End Events"],
			"description":"Triggering cancellation of a transaction.",
			"description_ja":"トランザクションのキャンセルのトリガー。",
			"view":"endevent/cancel.svg",
			"icon":"endevent/cancel.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Cancel",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		{
			"type": "node",
			"id":"EndCompensationEvent",
			"title":"Compensation End Event",
			"groups":["End Events"],
			"description":"Triggering compensation as final process step.",
			"description_ja":"最終プロセスステップとしてのCompensationのトリガー。",
			"view":"endevent/compensation.svg",
			"icon":"endevent/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor",
				"compensationThrowing",
				"compensation"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Compensation",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		{
			"type": "node",
			"id":"EndSignalEvent",
			"title":"Signal End Event",
			"groups":["End Events"],
			"description":"At the end of the process, a signal is thrown. (One signal thrown can be caught multiple times)",
			"description_ja":"プロセスの終了時にシグナルがスローされます（スローされた1つのシグナルが複数回キャッチされます）。",
			"view":"endevent/signal.svg",
			"icon":"endevent/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Signal",
					"description":"",
					"readonly":true,
					"optional":false
				},**/
				{
					"id":"signalref",
					"type":"Text",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		/**{
			"type": "node",
			"id":"EndMultipleEvent",
			"title":"Multiple End Event",
			"groups":["End Events"],
			"description":"At the end of the process, one out of a set of possible events is triggered.",
			"description_ja":"プロセスの終了時に、可能性のあるイベントのセットのうちいずれか1つがトリガーされます。",
			"view":"endevent/multiple.svg",
			"icon":"endevent/multiple.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Multiple",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},**/
		{
			"type": "node",
			"id":"EndTerminateEvent",
			"title":"Terminate End Event",
			"groups":["End Events"],
			"description":"Triggering the immediate termination of a process instance. All steps still in execution in parallel branches are terminated.",
			"description_ja":"プロセスインスタンスの即時終了のトリガー。並列分岐でまだ実行中のすべてのステップが終了させられます。",
			"view":"endevent/terminate.svg",
			"icon":"endevent/terminate.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"choreography_sequence_end",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#ff6347", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ff6347",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				}
				/**{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
					"value":"Terminate",
					"description":"",
					"readonly":true,
					"optional":false
				}**/
			]
		},
		
		// Edges
		
		{
			"type": "edge",
			"id":"SequenceFlow",
			"title":"Sequence Flow",
			"description":"Sequence Flow defines the execution order of activities.",
			"description_ja":"シーケンスフローは、アクティビティの実行順序を定義します。",
			"groups":["Connecting Objects"],
			"view":"connector/sequenceflow.svg",
			"icon":"connector/sequenceflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],
			"properties":[
				{
					"id":"ConditionType",
					"type":"Choice",
					"title":"ConditionType",
					"value":"None",
					"description":"Determine the typ of the flow object.",
					"description_ja":"フローオブジェクトのタイプを定義します。",
					"readonly":true,
					"optional":false,
					"visible":false,
					"items": [
						{
							"id":"none",
							"title":"Standard",
							"value":"None"
						},
						{
							"id":"expression",
							"title":"Conditional Flow",
							"value":"Expression",
							"icon" : "connector/list/type.expression.png",
							"refToView":""
						},
						{
							"id":"default",
							"title":"Default Flow",
							"value":"Default",
							"icon" : "connector/list/type.default.png",
							"refToView":"default"
						}
					]
				},
				{
					"id":"conditionexpression",
					"type":"Expression",
					"title":"Condition Expression",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"conditionexpressionlanguage",
					"type":"Choice",
					"title":"Condition Expression Language",
					"value":"java",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"items": [
						{
							"id": "c1",
							"title": "java",
							"value": "java"
						},
						{
							"id": "c2",
							"title": "drools",
							"value": "drools"
						}    
					]  
				},
				{
					"id":"priority",
					"type":"Integer",
					"title":"Priority",
					"value":"",
					"description":"priority",
					"description_ja":"優先度",
					"readonly":false,
					"optional":true,
					"min":"1"
				},
				{
					"id":"probability",
					"type":"Integer",
					"title":"Probability",
					"value":"100",
					"description":"Probability",
					"description_ja":"Probability",
					"readonly":false,
					"optional":true,
					"simulation" : true,
					"min" : "0",
					"max" : "100"
				},
				{
					"id":"isimmediate",
					"type":"Boolean",
					"title":"isImmediate",
					"value":"",
					"description":"An optional Boolean value specifying whether Activities or Choreography Activities not in the model containing the Sequence Flow can occur between the elements connected by the Sequence Flow. If the value is true, they MAY NOT occur. If the value is false, they MAY occur. Also see the isClosed attribute on Process, Choreography, and Collaboration.",
					"description_ja":"モデル内になく、シーケンスフローを含むアクティビティまたはChoreographyアクティビティがシーケンスフローによって接続された要素の間で発生可能かどうかを指定するオプションのブール値。値がtrueの場合、これらは発生しません。値がfalseの場合、これらは発生可能です。プロセス、Choreography、およびコラボレーションのisClosed属性も参照してください。",
					"readonly":false,
					"optional":false
				},
				{
					"id":"showdiamondmarker",
					"type":"Boolean",
					"title":"is conditional flow",
					"value":false,
					"description":"System intern variable to set the Diamond invisible, if sourceShape is a gateway and ConditionType is set to Expression",
					"description_ja":"sourceShapeがゲートウェイでConditionTypeがExpressionに設定されている場合に、ダイヤを不可視に設定するシステムインターン変数。",
					"readonly":true,
					"optional":false,
					"visible":false,
					"refToView":"conditional"
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
					"value":"#000000", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["start", "end", "frame2"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"description_ja":"フォントの色",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"description":"The Font Size",
					"description_ja":"フォントのサイズ",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			]
		},
		{
			"type": "edge",
			"id":"Association_Undirected",
			"title":"Association (undirected)",
			"description":"Attaching a data object with an Undirected Association to a sequence flow indicates hand-over of information between the activities involved.",
			"description_ja":"データオブジェクトが無方向関連でシーケンスフローにアタッチされている場合、関与するアクティビティ間で情報の受け渡しがあることを表します。",
			"groups":["Connecting Objects"],
			"view":"connector/association.undirected.svg",
			"icon":"connector/association.undirected.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],			
			"propertyPackages" : [
			    "baseAttributesNoName"
			],
			"properties" : [
				{
					"id":"type",
					"type":"Choice",
					"title":"Responsibilities",
					"value":"none",
					"description":"Describes the type of the responsibility according to RACI.",
					"description_ja":"RACIに従って責任のタイプを記述します。",
					"readonly":false,
					"optional":true,
					"refToView":"name",
					"items": [
						{
							"id":"c1",
							"title":"",
							"value":"none"
						},
						{
							"id":"c2",
							"title":"responsible",
							"value":"performs"
						},
						{
							"id":"c3",
							"title":"accountable",
							"value":"approves"
						},
						{
							"id":"c4",
							"title":"consulted",
							"value":"consulted"
						},
						{
							"id":"c5",
							"title":"informed",
							"value":"isNotified"
						}
					]
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				}
           ]
		},
		{
			"type": "edge",
			"id":"Association_Unidirectional",
			"title":"Association (unidirectional)",
			"description":"A Directed Association indicates information flow. A data object can be read at the start of an activity or written upon completion.",
			"description_ja":"有方向関連は、情報の流れを表します。データオブジェクトは、アクティビティの開始時に読み取り、完了時に書き込めます。",
			"groups":["Connecting Objects"],
			"view":"connector/association.unidirectional.svg",
			"icon":"connector/association.unidirectional.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph",
				"Directed_Association"
			],
			"propertyPackages" : [
			    "baseAttributesNoName"
			],
			"properties" : [
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"BorderColor",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				}
           ]
		},
		/**{
			"type": "edge",
			"id":"Association_Bidirectional",
			"title":"Association (bidirectional)",
			"description":"A Bidirected Association indicates that the data object is modified, i.e. read and written during the execution of an actvity.",
			"description_ja":"双方向関連は、データオブジェクトの改変を表します。つまり、アクティビティの実行中に読み書きが発生したことを表します。",
			"groups":["Connecting Objects"],
			"view":"connector/association.bidirectional.svg",
			"icon":"connector/association.bidirectional.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph",
				"Directed_Association"
			],			
			"propertyPackages" : [
			    "dataAssociation"
			],
			"properties" : [
                {
                    "id":"text",
                    "type":"String",
                    "title":"Name",
                    "value":"",
                    "description":"",
                    "readonly":false,
                    "optional":true,
                    "length":"",
                    "refToView":"name",
                    "wrapLines":true,
					"popular":true
                }
           ]
		},**/
		/**{
			"type": "edge",
			"id":"MessageFlow",
			"title":"Message Flow",
			"description":"Message Flow symbolizes information flow across organizational boundaries. Message flow can be attached to pools, activities, or message events. The order of message exchanges can be specified by combining message flow and sequence flow.",
			"description_ja":"メッセージフローは、組織のBoundaryを越えた情報フローを記号化します。メッセージフローは、プール、アクティビティ、またはメッセージイベントにアタッチできます。メッセージ交換の順序は、メッセージフローとシーケンスフローを組み合わせることで指定できます。",
			"groups":["Connecting Objects"],
			"view":"connector/messageflow.svg",
			"icon":"connector/messageflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"ConnectingObjectsMorph",
				"MessageContainer"
			]
		}**/
	],
	
	"rules" : {
		"cardinalityRules": [
			{
				"role":"Startevents_all",
				"incomingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			},
			{
				"role":"Endevents_all",
				"outgoingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			}
		],
		"connectionRules": [
			{
				"role":"SequenceFlow",
				"connects": [
					{
						"from":"sequence_start",
						"to":["sequence_end"]
					},
					{
						"from":"choreography_sequence_start",
						"to":["choreography_sequence_end"]
					},
					{
						"from":"Exclusive_Eventbased_Gateway",
						"to":["FromEventbasedGateway"]
					},{
						"from" : "EventbasedGateway",
						"to" : ["FromEventbasedGateway"]
					}
				]
			},
			{
				"role":"MessageFlow",
				"connects": [
					{
						"from":"messageflow_start",
						"to":["messageflow_end"]
					}
				]
			},
			{
				"role":"ChoreographyMessageFlowStart",
				"connects": [
					{
						"from":"messageflow_start",
						"to":["choreography_messageflow_end"]
					}
				]
			},
			{
				"role":"ChoreographyMessageFlowEnd",
				"connects": [
					{
						"from":"choreography_messageflow_start",
						"to":["messageflow_end"]
					}
				]
			},
			{
				"role":"IntermediateEventOnActivityBoundary",
				"connects": [
					{
						"from":"Task",
						"to":["IntermediateEventOnActivityBoundary"]
					}
				]
			},
			{
				"role":"IntermediateEventOnSubprocessBoundary",
				"connects": [
					{
						"from":"CollapsedSubprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					},
					{
						"from":"Subprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					}
					/** ,
					{
						"from":"ReusableSubprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					}**/
				]
			},
			{
				"role":"EventOnChoreographyActivityBoundary",
				"connects": [
					{
						"from":"ChoreographyMorph",
						"to":["EventOnChoreographyActivityBoundary"]
					}
				]
			},
			{
				"role" : "Directed_Association",
				"connects" : [
					{
						"from" : "from_task_event",
						"to" : ["DataObject"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataObject",
						"to" : ["to_task_event"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "IntermediateCompensationEventCatching",
						"to" : ["to_task_event"]
					}
				]
			},
			{
				"role" : "Association_Undirected",
				"connects" : [
					{
						"from" : "SequenceFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "DataObject",
						"to" : ["SequenceFlow"]
					},
					{
						"from" : "DataObject",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "fromtoall",
						"to" : ["TextAnnotation"]
					},
					{
						"from" : "TextAnnotation",
						"to" : "fromtoall"
					},
					{
						"from" : "Message",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["Message"]
					},
					{
						"from" : "Message",
						"to" : ["ChoreographyElement"]
					},
					{
						"from" : "ChoreographyElement",
						"to" : ["Message"]
					},
					{
						"from" : "ChoreographyElement",
						"to" : ["TextAnnotation"]
					},
					{
						"from" : "TextAnnotation",
						"to" : "ChoreographyElement"
					},
					{
					   "from" : "ActivitiesMorph",
					   "to" : ["to_participant"]
					},
					{
					   "from" : "to_participant",
					   "to" : ["ActivitiesMorph"]
					}
				]
			}
		],
		"containmentRules" : [
			{
				"role" : "BPMNDiagram",
				"contains" : ["all"]
			},
			{
				"role" : "EventSubprocess",
				"contains" : [
					"eventSubprocessElement",
					"sequence_start",
					"sequence_end"
				]
			},
			{
				"role" : "Pool",
				"contains" : [
					"Lane"
				]
			},
			{
				"role" : "Lane",
				"contains" : ["all"]
			},
			{
				"role" : "Subprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"CollapsedEventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "AdHocSubprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"CollapsedEventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "MultipleInstanceSubprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"CollapsedEventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "MessageContainer",
				"contains" : ["Message"]
			},
			{
				"role" : "ChoreographyElement",
				"contains" : ["ChoreographyParticipant"]
			},
			{
				"role" : "ChoreographySubprocessExpanded",
				"contains":	[
								"ChoreographyElement",
								"choreography_sequence_start",
								"choreography_sequence_end",
								"Message",
								"TextAnnotation"
																
							]
			}
		],
		"morphingRules": [
			{
				"role": "ActivitiesMorph",
				"baseMorphs": ["Task"],
				"preserveBounds" : true
			},
			{
				"role": "EventActivitiesMorph",
				"baseMorphs": ["CollapsedEventSubprocess"]
			},
			{
				"role": "GatewaysMorph",
				"baseMorphs": ["Exclusive_Databased_Gateway"]
			},
			{
				"role": "StartEventsMorph",
				"baseMorphs": ["StartNoneEvent"],
				"showInShapeMenu":false
			},
			{
				"role": "IntermediateEventsMorph",
				"baseMorphs": ["IntermediateEvent"]
			},
			{
				"role": "EndEventsMorph",
				"baseMorphs": ["EndNoneEvent"]
			},
			{
				"role": "TextAnnotationMorph",
				"baseMorphs": ["TextAnnotation"]
			},
			{
				"role": "DataObjectMorph",
				"baseMorphs": ["DataObject"]
			},
			{
				"role": "ConnectingObjectsMorph",
				"baseMorphs": ["SequenceFlow"]
			},
			{
				"role": "ChoreographyMorph",
				"baseMorphs": ["ChoreographyTask"]
			},
			{
				"role": "AssociationMorph",
				"baseMorphs": [""]
			}
		],
		"layoutRules" : [
			{
				"role": "ActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EventActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "ChoreographyMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "GatewaysMorph",
				"outs": [{"t":2, "r":1, "b":2, "l":1}]
			},
			{
				"role": "StartEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "IntermediateEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EndEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			}
		]
	}
}
